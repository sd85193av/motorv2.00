	list      p=16F1947        ; list directive to define processor
	#include <p16F1947.inc>    ; 
                                            ORG  0X0000
;------------------------------前往BOOTLOADER
    GOTO        MCU_INITIALIZE
;=======================================================
;================== 中斷副程式起始位址 =================
;=======================================================
;△
                                            ORG  0X0004
PAGESEL         0X0000
BANKSEL         BANK0
    BTFSC       PIR3,TMR6IF
    GOTO        TIMER6_BASE_LOOP
    BTFSC       PIR1,TMR2IF
    GOTO        TIMER2_BASE_LOOP ;LED
    CALL        STORE_INT_SHAD_DATA_LOOP     ;先記錄從一般程序進來中斷的 W和BANK....之類的資料
BANKSEL         BANK0
    GOTO        INTERRUPT_POINT_LOOP
;=================================================================BOOTLOADER
;======================================================= 
;===================== 程式初始化 ====================== 
;======================================================= 
MCU_INITIALIZE 
;====================
;==== 振盪器設定 ====
;====================
BANKSEL         OSCCON
    MOVLW       0XF0    ;32M
    MOVWF       OSCCON 
    MOVLW       0X00 
    MOVWF       OSCTUNE ;校正後頻率
    MOVLW       0X51    ;32M
    MOVWF       OSCSTAT ;高頻振盪精度0.5%
;====================
;==== OPTION設定 ====
;====================
    MOVLW       b'10001000
    MOVWF       OPTION_REG
;====================
;===== 中斷設定 =====
;====================
    MOVLW       0X40
    MOVWF       INTCON
BANKSEL         PIE1
    MOVLW       0X00
    MOVWF       PIE1   ;BIT 3 = MSSP 1 INTERRUPT, BIT 5 = USART 1 RECIEVE INTERRUPT
    MOVLW       0X00
    MOVWF       PIE2
    MOVLW       0X00
    MOVWF       PIE3
    MOVLW       0X00
    MOVWF       PIE4
;====================
;===== ADC 設定 =====
;====================
BANKSEL         ADCON0
    MOVLW       0X00
    MOVWF       ADCON0
    MOVLW       0X00
    MOVWF       ADCON1
BANKSEL         ANSELA
    CLRF        ANSELA
    CLRF        ANSELE
BANKSEL         ANSELF
    CLRF        ANSELF
    CLRF        ANSELG
BANKSEL         PORTA
;====================
;===== I/O 設定 =====
;====================
BANKSEL         PORTA 
    CLRF        PORTA
    CLRF        PORTB
    CLRF        PORTC
    CLRF        PORTD
    CLRF        PORTE
;---------------
BANKSEL         PORTF
    CLRF        PORTF
    CLRF        PORTG
;====================
;===== I/O狀態設定 ==
;====================
BANKSEL         TRISA
    MOVLW       0X00
    MOVWF       TRISA
    MOVLW       0X05
    MOVWF       TRISB
    MOVLW       0X18
;MOVLW 0XFF
    MOVWF       TRISC  
    MOVLW       0X00
    MOVWF       TRISD
    MOVLW       0X00
    MOVWF       TRISE
;---------------
BANKSEL         LATA 
    MOVLW       0X00
    MOVWF       LATA
    MOVLW       0X00
    MOVWF       LATB
    MOVLW       0X00
    MOVWF       LATC
    MOVLW       0X00
    MOVWF       LATD
    MOVLW       0X00
    MOVWF       LATE
;---------------
BANKSEL         LATF
    CLRF        LATF
    CLRF        LATG 
BANKSEL         TRISF 
    MOVLW       0X00
    MOVWF       TRISF
    MOVLW       0X00
    MOVWF       TRISG
BANKSEL         PORTA

                                             ORG  0X0080
;---------------------------------------------------------------------------------------
;---------------------------------------------------------------------------------------預留之後會上燒入FLASH_程序
    GOTO        MAIN
;---------------------------------------------------------------------------------------
;---------------------------------------------------------------------------------------
;;=========================================
;;==============暫存器宣告=================
;;=========================================
;---------------------------------------------------------------
;EQU 表示數字使用
CLEAN_H				        EQU		                0X03            
CLEAN_L				        EQU		                0XFF
FLASH_TEMP_H		        EQU		                0X23			;BANK10開始
FLASH_TEMP_L		        EQU	                 	0X20
BASEMENT_TEMP               EQU                     0X7E
NORMAL_TEMP                 EQU                     0X7F
;---------------------------------------------------------------
;PORT_PIN定義
SB3585_PORT                 EQU                     PORTC
RST_PIN                     EQU                     0X02
MA104_TRIS                  EQU                     TRISB
MA104_PORT                  EQU                     PORTB
INT_BUSY                    EQU                     0X00
INT_TX                      EQU                     0X01
INT_RX                      EQU                     0X02
MA_RST_PIN                  EQU                     0X03
;---------------------------------------------------------------
;---------------------------------------------------------------
;系統固定暫存器設定
BANK0                       EQU                     PORTA
BANK1                       EQU                     TRISA
BANK2                       EQU                     LATA
BANK3                       EQU                     ANSELA
BANK4                       EQU                     SSP1BUF
BANK5                       EQU                     CCPR1L
BANK6                       EQU                     CCPR3L
BANK7                       EQU                     IOCBP
BANK8                       EQU                     TMR4
BANK9                       EQU                     WPUG
;---------
PA                          EQU                     LATA             ;BANK2
PB                          EQU                     LATB             ;BANK2
PC                          EQU                     LATC             ;BANK2
PD                          EQU                     LATD             ;BANK2
PE                          EQU                     LATE             ;BANK2
PF                          EQU                     LATF             ;BANK7
PG                          EQU                     LATG             ;BANK7
;---------
					  
EEPROM_ADR                  EQU                     0X70
EEPROM_DAT                  EQU                     0X71
FLASH_ADR_H                 EQU                     0X70
FLASH_ADR_L                 EQU                     0X71
;--
FLASH_DAT_H                 EQU                     0X72
FLASH_DAT_L                 EQU                     0X73
DELAY_BASE_1                EQU                     0X20
DELAY_BASE_2                EQU                     0X21
DELAY_BASE_3                EQU                     0X22
DELAY_BASE_4                EQU                     0X23
INT_POINT_FSR_TEMP          EQU                     0X7C             ;中斷決定儲存SHAD位置
INT_SHAD_COUNT              EQU                     0X7D
;---------------------------------------------------------------
;通用暫存器設定 
LED_DATA_A                  EQU                     0X74
LED_DATA_B                  EQU                     0X75
LED_DATA_C                  EQU                     0X76
LED_DATA_D                  EQU                     0X77
LED_DATA_E                  EQU                     0X78             ;LED輸出資料
LED_DATA_F                  EQU                     0X79
LED_DATA_G                  EQU                     0X7A

;---------------------------------------------------------------
;I2C_HW_REG_SETTING
HW_I2C_FLAG                 EQU                     0X24
;---------------------
HW_RECEIVER_LOOP_F          EQU                     0X01   ;0:TRANSMIT      OR 1:RECEIVER
HW_RECEIVER_OR_ADR_F        EQU                     0X02   ;0:SAND ADR_RW   OR 1:GO Receiver DAT or Respond ACK
HW_RECEIVER_OR_ACK_F        EQU                     0X03   ;0:Receiver DAT  OR 1:Respond ACK
HW_I2C_BUSY_F               EQU                     0X04   ;0:I2C IDEL         1:I2C BUSY
HW_RECEIVER_MOV_BUF_F       EQU                     0X05   ;是否要將 HW_I2C_BUF_DAT MOV TO REGISTER
;----------
HW_I2C_FSR0L_TEMP           EQU                     0X25
HW_I2C_TABLE_POINT_DAT      EQU                     0X26
EEPROM_ADR_TEMP             EQU                     0X27
HW_I2C_RELOAD_COUNT         EQU                     0X28
HW_I2C_CHOICE_DATA          EQU                     0X29   ;決定要使用哪個資料輸出給I2C

;特殊_FLAG_REG_SETTING
;----------
SP_FLAG                     EQU                     0X2A
DISABLE_I2C_F               EQU                     0X00
DISABLE_UART_F              EQU                     0X01
DISABLE_ALL_LED_F           EQU                     0X02
OUTPUT_ADR_OR_DAT_F         EQU                     0X03
SET_ADR_80_A0_F             EQU                     0X04
MUTEX_STOP_START_F          EQU                     0X05
ENABLE_FLOAT_F              EQU                     0X06
BACK_OK_F EQU 0X07
;---------------------------------------------------------
FLAG0_BANK0                 EQU                     0X2B
CAL_LED_F                   EQU                     0X00
EE_W_OK_F                   EQU                     0X01
EE_BUSY_F                   EQU                     0X02
ERASE_F_ENABLE_F            EQU                     0X03
WRITE_E_ENABLE_F            EQU                     0X04
WRITE_OVER_F_ENABLE_F       EQU                     0X05
;---------------------------------------------------------
BUTTON_CONTROL_1_FLAG       EQU                     0X2C
CLOSE_INT_F                 EQU                     0X00    ;0:時間還夠/ 1:時間不足
BTN_I2C_DISABLE_F           EQU                     0X01    ;0:還不能收資料/1:下次READ的值就是需要收下的資料
BTN_ENABLE_WORK_F           EQU                     0X02    ;0:還沒收滿所有按鈕觸控狀態/1:收滿可以進行處裡按鈕動作程序
DEBOUNCE_TIME_F             EQU                     0X03    ;1:設定的DEBOUNCE時間到了
WAIT_DEBOUNCE_F             EQU                     0X04    ;0:表示尚未啟動DEBOUNCE程序/1:啟動
LED_ENABLE_WORK_F           EQU                     0X05    ;
;---------------------------------------------------------

UART_FLAG                   EQU                     0X2D
UART_BUSY_F                 EQU                     0X00    ;0:FREE  1:BUSY
UART_RX_TX_F                EQU                     0X01    ;0:RX    1:TX
UART_RX_CMD_F               EQU                     0X02    ;0:未做  1:做過
UART_TX_NEXT_F              EQU                     0X03    ;UART TX 可以送下一筆資料
UART_RX_NUM_F               EQU                     0X04    ;表示後面要收的BYTE數必須要透過後面RAM才能決定
UART_TX_FIRST_IN            EQU                     0X05
UART_TX_LAST_F              EQU                     0X06
UART_RX_INT_CLOSE_F         EQU                     0X07
;---------------------------------------------------------
FLAG1_BANK0                 EQU                     0X2E
UART_RX_OVER_F              EQU                     0X00
ENABLE_OUTPUT_I2C_F         EQU                     0X01
ENABLE_ONCE_F               EQU                     0X02
OUTPUT_FAN_ENABLE_F         EQU                     0X03
OUTPUT_LED_ENABLE_F         EQU                     0X04
ADR_OR_DAT_FLAG             EQU                     0X05
;I2C_FSR_REG_SETTING
;----------
HW_READ_COUNT               EQU                     0X30
HW_WRITE_COUNT              EQU                     0X31
HW_ADR                      EQU                     0X32
HW_BUF_DATA1                EQU                     0X33
HW_BUF_DATA2                EQU                     0X34
HW_BUF_DATA3                EQU                     0X35
HW_BUF_DATA4                EQU                     0X36
HW_BUF_DATA5                EQU                     0X37
HW_BUF_DATA6                EQU                     0X38
HW_BUF_DATA7                EQU                     0X39
HW_BUF_DATA8                EQU                     0X3A
HW_BUF_DATA9                EQU                     0X3B
HW_BUF_DATA10               EQU                     0X3C
HW_BUF_DATA11               EQU                     0X3D
HW_BUF_DATA12               EQU                     0X3E
HW_BUF_DATA13               EQU                     0X3F
HW_BUF_DATA14               EQU                     0X40
HW_BUF_DATA15               EQU                     0X41
HW_BUF_DATA16               EQU                     0X42
HW_BUF_DATA17               EQU                     0X43
HW_BUF_DATA18               EQU                     0X44
HW_BUF_DATA19               EQU                     0X45
HW_BUF_DATA20               EQU                     0X46
;------------
TOUCH_STATUS_1              EQU                     0X47
TOUCH_STATUS_2              EQU                     0X48
BUTTON_STATUS_1             EQU                     0X49
BUTTON_STATUS_2             EQU                     0X4A

UART_FSR_TEMP               EQU                     0X4B
UART_RX_COMPARE_TEMP        EQU                     0X4C    ;RX和FSR_TEMP比較決定動作
UART_DATA_TEMP              EQU                     0X4D    ;RX/TX接收TEMP
UART_BIT_COUNT              EQU                     0X4E
UART_BYTE_COUNT             EQU                     0X4F
UART_TX_FSR_TEMP            EQU                     0X50
UART_TX_TATLE_DATA_COUNT    EQU                     0X51   ;TX總共要送的資料數量
UART_TX_READY_FSR_TEMP      EQU                     0X52

FLASH_COUNT                 EQU                     0X53
FLASH_FSR_TEMP              EQU                     0X54
BANK0_DATA_COUNT            EQU                     0X55

UART_EE_ADR_TEMP            EQU                     0X56
UART_EE_COUNT               EQU                     0X57
UART_EE_FSR_TEMP            EQU                     0X58

BUTTON_KEEP_2               EQU                     0X59
BUTTON_LATCH_2              EQU                     0X5A
LED_STATUS_1                EQU                     0X5B
LED_STATUS_2                EQU                     0X5C
BUTTON_KEEP_1               EQU                     0X5D
BUTTON_LATCH_1              EQU                     0X5E
BASE_TIMER_TEMP             EQU                     0X5F
SLIDE_MASK_DATA             EQU                     0X60
SLIDE_SUCCESS_COUNT         EQU                     0X61
OLD_SLIDE_STATUS_DATA       EQU                     0X62

SLIDE_PWM_DATA              EQU                     0X64
OLD_SLIDE_DATA              EQU                     0X65
CAL_SLIDE_TEMP              EQU                     0X66
SLIDE_CAL_COUNT             EQU                     0X67
PWM_POINT_DATA              EQU                     0X68    ;




;------------------------------------------------------------------------------------------------------------------------------
;-----------------------------------------------    BANK1    ------------------------------------------------------------------
;------------------------------------------------------------------------------------------------------------------------------
SEND_DATA1                  EQU                     0XA0
SEND_DATA2                  EQU                     0XA1
SEND_DATA3                  EQU                     0XA2
SEND_DATA4                  EQU                     0XA3
SEND_DATA5                  EQU                     0XA4
SEND_DATA6                  EQU                     0XA5
SEND_DATA7                  EQU                     0XA6
SEND_DATA8                  EQU                     0XA7
SEND_DATA9                  EQU                     0XA8
SEND_DATA10                 EQU                     0XA9


SLIDE_BT1_1_DATA            EQU                     0XAA
SLIDE_BT1_2_DATA            EQU                     0XAB
SLIDE_BT1_3_DATA            EQU                     0XAC
SLIDE_BT1_4_DATA            EQU                     0XAD
SLIDE_BT1_5_DATA            EQU                     0XAE
SLIDE_BT1_6_DATA            EQU                     0XAF
SLIDE_BT1_7_DATA            EQU                     0XB0
SLIDE_BT1_8_DATA            EQU                     0XB1


CAL_SLIDE_NUMBER1           EQU                     0XB2
CAL_SLIDE_NUMBER2           EQU                     0XB3
SAVE_LEFT_SLIDE             EQU                     0XB4
SAVE_RIGHT_SLIDE            EQU                     0XB5
TAKE_VALUE_DATA             EQU                     0XB6   ;取多少有效位
BASE_SLIDE_LOCATION         EQU                     0XB7
BASE_CAL_TEMP EQU 0XB8

FLAG_BANK1 EQU 0XB9
RIGHT_WAY_FLAG    EQU 0X01
LEFT_WAY_FLAG    EQU 0X02
HEAD_COLOR_FLAG EQU 0X03
ENABLE_FLOAT_FLAG EQU 0X04
DEBOUNCE_SLIDE_TIME         EQU                     0XBA
DEBOUNCE_SLIDE_TEMP         EQU                     0XBB

;---------------------------------------------------------------
SHAD_STATUS_DATA1           EQU                     0XC0
SHAD_W_DATA1                EQU                     0XC1
SHAD_BSR_DATA1              EQU                     0XC2
SHAD_PCLATH_DATA1           EQU                     0XC3
SHAD_FSR0L_DATA1            EQU                     0XC4
SHAD_FSR0H_DATA1            EQU                     0XC5
SHAD_FSR1L_DATA1            EQU                     0XC6
SHAD_FSR1H_DATA1            EQU                     0XC7
;----------
SHAD_STATUS_DATA2           EQU                     0XC8
SHAD_W_DATA2                EQU                     0XC9
SHAD_BSR_DATA2              EQU                     0XCA
SHAD_PCLATH_DATA2           EQU                     0XCB
SHAD_FSR0L_DATA2            EQU                     0XCC
SHAD_FSR0H_DATA2            EQU                     0XCD
SHAD_FSR1L_DATA2            EQU                     0XCE
SHAD_FSR1H_DATA2            EQU                     0XCF
;----------------------------------------------------------------------
;------------------------------------------------------------------------------------------------------------------------------
;-----------------------------------------------    BANK2    ------------------------------------------------------------------
;------------------------------------------------------------------------------------------------------------------------------
RX_TEMP0                    EQU                     0X20
RX_TEMP1                    EQU                     0X21    ;資料從RX_TEMP1開始擺
RX_TEMP2                    EQU                     0X22
RX_TEMP3                    EQU                     0X23
RX_TEMP4                    EQU                     0X24
RX_TEMP5                    EQU                     0X25
RX_TEMP6                    EQU                     0X26
RX_TEMP7                    EQU                     0X27
RX_TEMP8                    EQU                     0X28
RX_TEMP9                    EQU                     0X29
RX_TEMP10                   EQU                     0X2A
RX_TEMP11                   EQU                     0X2B
RX_TEMP12                   EQU                     0X2C
RX_TEMP13                   EQU                     0X2D
RX_TEMP14                   EQU                     0X2E
RX_TEMP15                   EQU                     0X2F

RX_TEMP16                   EQU                     0X30
RX_TEMP17                   EQU                     0X31
RX_TEMP18                   EQU                     0X32
RX_TEMP19                   EQU                     0X33
RX_TEMP20                   EQU                     0X34
RX_TEMP21                   EQU                     0X35
RX_TEMP22                   EQU                     0X36
RX_TEMP23                   EQU                     0X37
RX_TEMP24                   EQU                     0X38
RX_TEMP25                   EQU                     0X39
RX_TEMP26                   EQU                     0X3A
RX_TEMP27                   EQU                     0X3B
RX_TEMP28                   EQU                     0X3C
RX_TEMP29                   EQU                     0X3D
RX_TEMP30                   EQU                     0X3E
RX_TEMP31                   EQU                     0X3F


STORE_DATA_COUNT_BANK2      EQU                      0X50

;------------------------------------------------------------------------------------------------------------------------------
;-----------------------------------------------    BANK4    ------------------------------------------------------------------
;------------------------------------------------------------------------------------------------------------------------------
;計算LED資料
CAL01_R_TEMP                EQU                     0X20
CAL01_G_TEMP                EQU                     0X21
CAL01_B_TEMP                EQU                     0X22
;---------------
CAL02_R_TEMP                EQU                     0X23
CAL02_G_TEMP                EQU                     0X24
CAL02_B_TEMP                EQU                     0X25
;---------------
CAL03_R_TEMP                EQU                     0X26
CAL03_G_TEMP                EQU                     0X27
CAL03_B_TEMP                EQU                     0X28
;---------------
CAL04_R_TEMP                EQU                     0X29
CAL04_G_TEMP                EQU                     0X2A
CAL04_B_TEMP                EQU                     0X2B
;---------------
CAL05_R_TEMP                EQU                     0X2C
CAL05_G_TEMP                EQU                     0X2D
CAL05_B_TEMP                EQU                     0X2E
;---------------
CAL06_R_TEMP                EQU                     0X2F
CAL06_G_TEMP                EQU                     0X30
CAL06_B_TEMP                EQU                     0X31
;---------------
CAL07_R_TEMP                EQU                     0X32
CAL07_G_TEMP                EQU                     0X33
CAL07_B_TEMP                EQU                     0X34
;---------------
CAL08_R_TEMP                EQU                     0X35
CAL08_G_TEMP                EQU                     0X36
CAL08_B_TEMP                EQU                     0X37
;---------------
CAL09_R_TEMP                EQU                     0X38
CAL09_G_TEMP                EQU                     0X39
CAL09_B_TEMP                EQU                     0X3A
;---------------
CAL10_R_TEMP                EQU                     0X3B
CAL10_G_TEMP                EQU                     0X3C
CAL10_B_TEMP                EQU                     0X3D
;---------------
CAL11_R_TEMP                EQU                     0X3E
CAL11_G_TEMP                EQU                     0X3F
CAL11_B_TEMP                EQU                     0X40
;---------------
CAL12_R_TEMP                EQU                     0X41
CAL12_G_TEMP                EQU                     0X42
CAL12_B_TEMP                EQU                     0X43
;---------------
CAL13_R_TEMP                EQU                     0X44
CAL13_G_TEMP                EQU                     0X45
CAL13_B_TEMP                EQU                     0X46
;---------------
CAL14_R_TEMP                EQU                     0X47
CAL14_G_TEMP                EQU                     0X48
CAL14_B_TEMP                EQU                     0X49
;---------------
CAL15_R_TEMP                EQU                     0X4A
CAL15_G_TEMP                EQU                     0X4B
CAL15_B_TEMP                EQU                     0X4C
;---------------
LED_PWM_DOWN_COUNT          EQU                     0X50         ;LED_PWM輸出計次
;------------------------------------------------------------------------------------------------------------------------------
;-----------------------------------------------    BANK11    -----------------------------------------------------------------
;------------------------------------------------------------------------------------------------------------------------------
FLASH_00_DATA               EQU                     0XA0
FLASH_01_DATA               EQU                     0XA1


;**************************************************************
MAIN
;GOTO MAIN
    ;BCF         SB3585_PORT,RST_PIN
    ;BSF         SB3585_PORT,RST_PIN
    ;BSF         MA104_PORT,MA_RST_PIN
BANKSEL         PB
    BCF         PC,0X02
    BSF         PC,0X02
    BSF         PB,0X01
    BSF         PB,0X03
BANKSEL         PORTA
    CALL        DELAY_100ms
;--------------------------------------
;===============================================
;============將REG內資料全部清空================
;===============================================							  
CLEAN_ALL_REGISTER
	MOVLW		0X20
	MOVWF		FSR1H
	MOVLW		0X00
	MOVWF		FSR1L
	MOVLW		CLEAN_H
	MOVWF		0X71
	MOVLW		CLEAN_L
	MOVWF		0X70   
CLEAN_ALL_REGISTER_LOOP
	CLRF		INDF1
    BCF         STATUS,C
    MOVLW       0X01
    ADDWF       FSR1L,F
    MOVLW       0X00
    ADDWFC      FSR1H,F
	DECFSZ		0X70,F
	GOTO		CLEAN_ALL_REGISTER_LOOP
	MOVLW		0XFF
	MOVWF		0X70
	DECFSZ		0X71,F
	GOTO		CLEAN_ALL_REGISTER_LOOP
    MOVLW       0X00
BANKSEL         LED_DATA_A
    MOVWF       LED_DATA_A
    MOVWF       LED_DATA_B
    MOVWF       LED_DATA_C
    MOVWF       LED_DATA_D
    MOVWF       LED_DATA_E
BANKSEL         LED_DATA_F
    MOVWF       LED_DATA_F
    MOVWF       LED_DATA_G
;===============================================
;==============I2C1_參數INIT====================
;===============================================
I2C1_BEGIN_SETTING
;MSSP1 = MASTER
BANKSEL         SSP1ADD
    MOVLW       0X10
    MOVWF       SSP1ADD     
    MOVLW       0X28
    MOVWF       SSP1CON1
    MOVLW       0X00
    MOVWF       SSP1CON3
    MOVLW       0X00
    MOVWF       SSP1CON2
;-------
INTERRUPT_ON_CHANGE_SETTING
BANKSEL         IOCBP
    MOVLW       0X04
    MOVWF       IOCBN ;1-0
    MOVLW       0X00
    MOVWF       IOCBP ;0-1         
    BSF         INTCON,IOCIE
;------------------------------
    CALL        SET_TMR2_ON
    CALL        SET_TMR6_COUNT
BANKSEL         BANK4
    MOVLW       0X14
    MOVWF       LED_PWM_DOWN_COUNT
    MOVLW       0XC0
    MOVWF       INT_POINT_FSR_TEMP        ;紀錄中斷SHAD從BANK1的0XC0開始
BANKSEL         BANK1
    MOVLW       0X02
    MOVWF       TAKE_VALUE_DATA
BANKSEL         BANK0
    MOVLW       0X00
    MOVWF       EEPROM_ADR_TEMP
    CLRF        UART_FSR_TEMP
BCF         SP_FLAG,ENABLE_FLOAT_F
BANKSEL         PIE1
    BSF         PIE1,SSPIE
    ;BSF         PIE2,EEIE
BANKSEL         PORTA
    BSF         INTCON,GIE




;MOVLW 0X08
;MOVWF FLASH_ADR_H
;MOVLW 0X20
;MOVWF FLASH_ADR_L
;PPPPPPP
;
;CALL ERASE_FLASH_LOOP
;BANKSEL PORTA
;BTFSC FLAG0_BANK0,ERASE_F_ENABLE_F
;GOTO PPPPPPP
;
;DDDDD
;BANKSEL PD
;BSF PD,0X05
;BCF PD,0X05
;GOTO DDDDD



;-------------------------------------------------------
;===============================================
;=================初始化設定====================
;===============================================
SYSTEM_START_INIT_LOOP
BANKSEL         PORTA
    MOVLW       0X24
    XORWF       HW_I2C_TABLE_POINT_DAT,W
    BTFSC       STATUS,Z
    GOTO        SYSTEM_JUDG_INIT_LOOP
SYSTEM_START_INIT_LOOP1
    CALL        INT_I2C_PREPARE_LOOP
    GOTO        SYSTEM_START_INIT_LOOP
SYSTEM_JUDG_INIT_LOOP
    BTFSC       SP_FLAG,SET_ADR_80_A0_F
    GOTO        SYSTEM_BEFORE_MAIN_LOOP
    BSF         SP_FLAG,SET_ADR_80_A0_F
    BSF         SP_FLAG,ENABLE_FLOAT_F
    MOVLW       0X10
    MOVWF       EEPROM_ADR_TEMP
    CLRF        HW_I2C_TABLE_POINT_DAT
    GOTO        SYSTEM_START_INIT_LOOP1
SYSTEM_BEFORE_MAIN_LOOP
    BCF         SP_FLAG,SET_ADR_80_A0_F           ;SET ADR IN 0X80
    BSF         SP_FLAG,DISABLE_ALL_LED_F
BANKSEL         BANK1
    MOVLW       0X00
    MOVWF       SLIDE_BT1_1_DATA
    MOVWF       SLIDE_BT1_2_DATA
    MOVWF       SLIDE_BT1_3_DATA
    MOVWF       SLIDE_BT1_4_DATA
    MOVWF       SLIDE_BT1_5_DATA
    MOVWF       SLIDE_BT1_6_DATA
    MOVWF       SLIDE_BT1_7_DATA
    MOVWF       SLIDE_BT1_8_DATA
;===============================================
;=================主程序========================
;===============================================
SYSTEM_START_MAIN_LOOP
BANKSEL         PORTA
    BTFSS       FLAG0_BANK0,CAL_LED_F
    GOTO        SYSTEM_START_MAIN_LOOP
    BCF         BUTTON_CONTROL_1_FLAG,CLOSE_INT_F
SYSTEM_START_SET_INT_I2C
BANKSEL         PORTA
CALL        UART_DEAL_WITH_CMD_LOOP
BANKSEL         PORTA
    BTFSC       FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
    CALL        OUTPUT_SB3585_LOOP
    BTFSS       FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
    CALL        READ_SB3585_TOUCH_STATUS_LOOP
;---------------------                                         ;I2C讀按鈕狀態
    BTFSC       FLAG0_BANK0,CAL_LED_F
    CALL        LED_CAL_FUNCTION_LOOP
    BTFSC       FLAG0_BANK0,CAL_LED_F
    BCF         FLAG0_BANK0,CAL_LED_F
;*******                                                       ;顏色運算式
    CALL        CAL_FUTURE_FUNCTION                            ;判斷還剩下多少時間
    BTFSC       BUTTON_CONTROL_1_FLAG,CLOSE_INT_F              ;0:時間還夠/ 1:時間不足
    GOTO        CAL_FUTURE_CLOSE_TIME_LOOP
;*******
    CALL        DEAL_I2C_READ_DATA_LOOP
;*******
    CALL        CAL_FUTURE_FUNCTION                            ;判斷還剩下多少時間
    BTFSC       BUTTON_CONTROL_1_FLAG,CLOSE_INT_F              ;0:時間還夠/ 1:時間不足
    GOTO        CAL_FUTURE_CLOSE_TIME_LOOP
;*******
CALL        DEAL_BUTTON_WORK_LOOP
;*******
    CALL        CAL_FUTURE_FUNCTION                            ;判斷還剩下多少時間
    BTFSC       BUTTON_CONTROL_1_FLAG,CLOSE_INT_F              ;0:時間還夠/ 1:時間不足
    GOTO        CAL_FUTURE_CLOSE_TIME_LOOP
;*******
CALL        DEAL_LED_WORK_LOOP
    BTFSC       BUTTON_CONTROL_1_FLAG,WAIT_DEBOUNCE_F         ;當今天處理完按鈕動作，DEBOUNCETIME會啟動
    CALL        WAIT_DEBOUNCE_TIME_LOOP
;*******
    CALL        CAL_FUTURE_FUNCTION                            ;判斷還剩下多少時間
    BTFSC       BUTTON_CONTROL_1_FLAG,CLOSE_INT_F              ;0:時間還夠/ 1:時間不足
    GOTO        CAL_FUTURE_CLOSE_TIME_LOOP
;*******
CALL        UART_NORMAL_DEAL_WITH_LOOP
;*******

    GOTO        CAL_FUTURE_CLOSE_TIME_LOOP
;--------------------------------------------------
;--------------------------------------------------
;;等待時間 再次啟動BUTTON動作
WAIT_DEBOUNCE_TIME_LOOP
    BTFSS       BUTTON_CONTROL_1_FLAG,DEBOUNCE_TIME_F
    RETURN
    BCF         BUTTON_CONTROL_1_FLAG,WAIT_DEBOUNCE_F
    ;BCF         HW_I2C_FLAG,HW_I2C_BUSY_F
BCF BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
BCF SP_FLAG,BACK_OK_F
    RETURN
;===============================================
;================處理按鈕動作===================
;===============================================
;TOUCH_STATUS->BUTTON_STATUS
;先進行映射群組的動作
;之後會判斷SLIDE或是其他按鈕動作
DEAL_BUTTON_WORK_LOOP
    BTFSS       BUTTON_CONTROL_1_FLAG,BTN_ENABLE_WORK_F
    RETURN
    BCF         BUTTON_CONTROL_1_FLAG,BTN_ENABLE_WORK_F
    CALL        RESOLTING_BUTTON_STATUS_LOOP
;-------------------------
;目前觸控的基準已BUTTON_STATUS為主
PAGESEL         0X1800
    CALL        BUTTON_1_WORK_LOOP_1800
BANKSEL         BANK0
PAGESEL         0X0000
;-----------
    MOVF        BUTTON_STATUS_2,W
    ANDWF       BUTTON_KEEP_2,F
    MOVF        BUTTON_STATUS_2,W
    XORWF       BUTTON_KEEP_2,F
    MOVF        BUTTON_KEEP_2,W
    XORWF       BUTTON_LATCH_2,F
    MOVF        BUTTON_STATUS_2,W
    MOVWF       BUTTON_KEEP_2
;-------------------------
PAGESEL         0X1800
    CALL        BUTTON_2_WORK_LOOP_1800
BANKSEL         BANK0
PAGESEL         0X0000
    BSF         BUTTON_CONTROL_1_FLAG,LED_ENABLE_WORK_F
    RETURN
;===============================================
;================對外輸出動作===================
;===============================================
;根據上面按鈕操作的BUTTON_STATUS決定燈號或是其他輸出
DEAL_LED_WORK_LOOP
    BTFSS       BUTTON_CONTROL_1_FLAG,LED_ENABLE_WORK_F
    RETURN    
    BCF         BUTTON_CONTROL_1_FLAG,LED_ENABLE_WORK_F
PAGESEL         0X1800
    CALL        BUTTON_1_LED_LOOP_1800
    CALL        BUTTON_2_LED_LOOP_1800
PAGESEL         0X0000
BANKSEL         PORTA
    BSF         BUTTON_CONTROL_1_FLAG,WAIT_DEBOUNCE_F
    ;BSF         HW_I2C_FLAG,HW_I2C_BUSY_F
BSF BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
BSF SP_FLAG,BACK_OK_F
    BCF         BUTTON_CONTROL_1_FLAG,DEBOUNCE_TIME_F
    RETURN

;===============================================
;================儲存I2C觸控資料================
;===============================================
DEAL_I2C_READ_DATA_LOOP
    BTFSC       HW_I2C_FLAG,HW_I2C_BUSY_F
    RETURN
;---------
    BTFSS       BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
    RETURN   
;---------
BTFSC  SP_FLAG,BACK_OK_F
RETURN
    MOVF        HW_READ_COUNT,W
    BTFSS       STATUS,Z
    RETURN
;--------------------------
;進入條件滿足後，將I2C資料根據FLAG決定存在哪個位置
    BTFSC       SP_FLAG,SET_ADR_80_A0_F
    GOTO        STORE_BUTTON_2_STATUS_LOOP
STORE_BUTTON_1_STATUS_LOOP
    BCF         BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
    BSF         SP_FLAG,SET_ADR_80_A0_F
    MOVF        HW_BUF_DATA1,W
    MOVWF       TOUCH_STATUS_1
    RETURN
STORE_BUTTON_2_STATUS_LOOP
    BCF         BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
    BCF         SP_FLAG,SET_ADR_80_A0_F
    MOVF        HW_BUF_DATA1,W
    MOVWF       TOUCH_STATUS_2
    BSF         BUTTON_CONTROL_1_FLAG,BTN_ENABLE_WORK_F
    RETURN
;-------------------------------------------------
;預算時間，提前關閉中斷
;--------------------------------------------------
CAL_FUTURE_CLOSE_TIME_LOOP
    MOVLW       0X1A
    ADDWF       TMR2,W
    BTFSS       STATUS,C
    GOTO        SYSTEM_START_SET_INT_I2C
    GOTO        SYSTEM_START_MAIN_LOOP
;--------------------------------------------------
CAL_FUTURE_FUNCTION
    MOVLW       0X20
    ADDWF       TMR2,W
    BTFSS       STATUS,C
    RETURN
    BSF         BUTTON_CONTROL_1_FLAG,CLOSE_INT_F
    RETURN




;===============================================
;==============處裡UART_CMD程序=================
;===============================================
;讀寫EEPROM單個 多個 都OK
;剩下FLASH RAM和其他CMD
UART_DEAL_WITH_CMD_LOOP
BANKSEL         PORTA
    BTFSS       FLAG1_BANK0,UART_RX_OVER_F
    RETURN
;BANKSEL PD
;BSF PD,0X02
;BCF PD,0X02
BANKSEL         BANK2
    MOVLW       0X05
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_RESET_SB3585_LOOP
;----------
    MOVLW       0X06
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_READ_SINGLE_ROM_LOOP
;----------
    MOVLW       0X07
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_WRITE_SINGLE_ROM_LOOP
;;----------
;    MOVLW       0X0A
;    XORWF       RX_TEMP0,W
;    BTFSC       STATUS,Z
;    GOTO        CMD_READ_SINGLE_RAM_LOOP
;;----------
;    MOVLW       0X0B
;    XORWF       RX_TEMP0,W
;    BTFSC       STATUS,Z
;    GOTO        CMD_WRITE_SINGLE_RAM_LOOP
;;----------
    MOVLW       0X0E
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_READ_MORE_ROM_LOOP
;;----------
    MOVLW       0X0F
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_WRITE_MORE_ROM_LOOP
;;----------
    MOVLW       0X12
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_READ_MORE_RAM_LOOP
;;----------
;    MOVLW       0X13
;    XORWF       RX_TEMP0,W
;    BTFSC       STATUS,Z
;    GOTO        CMD_WRITE_MORE_RAM_LOOP
;;----------
    MOVLW       0X16
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_READ_MORE_FLASH_LOOP
;;----------
    MOVLW       0X17
    XORWF       RX_TEMP0,W
    BTFSC       STATUS,Z
    GOTO        CMD_WRITE_MORE_FLASH_LOOP
;----------
BANKSEL         PORTA
    BCF         UART_FLAG,UART_RX_INT_CLOSE_F
    ;GOTO        EXIT_DEAL_UART_LOOP
EXIT_DEAL_UART_LOOP
BANKSEL         PORTA
    BSF         UART_FLAG,UART_RX_TX_F
    BCF         SP_FLAG,DISABLE_UART_F
    BCF         FLAG1_BANK0,UART_RX_OVER_F
    RETURN



;===============================================
;=============重啟SB3585 資料===================
;===============================================
CMD_RESET_SB3585_LOOP
BANKSEL BANK0
BTFSC FLAG1_BANK0,ADR_OR_DAT_FLAG
RETURN
BTFSC SP_FLAG,OUTPUT_ADR_OR_DAT_F
RETURN
BTFSC HW_I2C_FLAG,HW_I2C_BUSY_F
RETURN
BANKSEL         BANK2
    MOVLW       0X01
    XORWF       RX_TEMP1,W
    BTFSC       STATUS,Z
    GOTO        CMD_RESET_SB3585_1_LOOP
CMD_RESET_SB3585_2_LOOP
BANKSEL         PORTA
    BSF         SP_FLAG,SET_ADR_80_A0_F
    MOVLW       0X10
    MOVWF       EEPROM_ADR_TEMP
    CLRF        HW_I2C_TABLE_POINT_DAT
    ;BCF         HW_I2C_FLAG,HW_I2C_BUSY_F
    BCF         SP_FLAG,ENABLE_FLOAT_F
    GOTO        CMD_RESET_SB3585_1_LOOP1

CMD_RESET_SB3585_1_LOOP
BANKSEL         PORTA
    BCF         SP_FLAG,SET_ADR_80_A0_F
    MOVLW       0X00
    MOVWF       EEPROM_ADR_TEMP
    CLRF        HW_I2C_TABLE_POINT_DAT
    BCF         SP_FLAG,ENABLE_FLOAT_F
    ;BCF         HW_I2C_FLAG,HW_I2C_BUSY_F

CMD_RESET_SB3585_1_LOOP1
BANKSEL         PORTA
    MOVLW       0X24
    XORWF       HW_I2C_TABLE_POINT_DAT,W
    BTFSC       STATUS,Z
    GOTO        CMD_RESET_SB3585_1_LOOP2
    CALL        INT_I2C_PREPARE_LOOP
    GOTO        CMD_RESET_SB3585_1_LOOP1
CMD_RESET_SB3585_1_LOOP2
    GOTO        WRITE_SEND_ACK_LOOP 
;===============================================
;=============讀一個EEPROM 資料=================
;===============================================
;從EEPROM讀一個BYTE資料
CMD_READ_SINGLE_ROM_LOOP
    MOVF        RX_TEMP1,W
    MOVWF       EEPROM_ADR
    CALL        READ_EEPROM
    MOVF        EEPROM_DAT,W
BANKSEL         BANK1
    MOVWF       SEND_DATA4
    MOVLW       0X01
    MOVWF       SEND_DATA3
    CLRF        SEND_DATA5
    CLRF        SEND_DATA6
    CLRF        SEND_DATA7
    CLRF        SEND_DATA8
    CLRF        SEND_DATA9
    GOTO        SEND_MA104_PREPARE_LOOP
;===============================================
;=============寫一個EEPROM 資料=================
;===============================================
;從EEPROM寫一個BYTE資料
CMD_WRITE_SINGLE_ROM_LOOP
;BANKSEL         BANK0
;    BTFSC       FLAG0_BANK0,WRITE_E_ENABLE_F
;    GOTO        CMD_WRITE_SINGLE_ROM_LOOP1     
BANKSEL         BANK2
    MOVF        RX_TEMP1,W
    MOVWF       EEPROM_ADR
    MOVF        RX_TEMP2,W
    MOVWF       EEPROM_DAT
    CALL        WRITE_EEPROM
;    RETURN
;;----------
;CMD_WRITE_SINGLE_ROM_LOOP1 
;    CALL        WRITE_EEPROM
;    BTFSC       FLAG0_BANK0,WRITE_E_ENABLE_F
;    RETURN
    GOTO        WRITE_SEND_ACK_LOOP  
;===============================================
;=============讀多個EEPROM 資料=================
;===============================================
;從ROM讀多個BYTE資料
CMD_READ_MORE_ROM_LOOP
    MOVF        RX_TEMP3,W
BANKSEL         PORTA
    MOVWF       EEPROM_ADR_TEMP
BANKSEL         BANK2
    MOVLW       0XFA
    ADDWF       RX_TEMP2,W
    BTFSC       STATUS,C
    GOTO        CMD_READ_ROM_BIG_SIX_LOOP
;-------------------------------------------
;要讀的資料小於6
CMD_READ_ROM_SMALL_SIX_LOOP
BANKSEL         BANK2
    MOVF        RX_TEMP2,W
BANKSEL         PORTA
    MOVWF       BANK0_DATA_COUNT
BANKSEL         BANK1
    MOVWF       SEND_DATA3
    CLRF        FSR0H
    MOVLW       SEND_DATA4
    MOVWF       FSR0L
    CALL        CMD_READ_STORE_BUFFER_LOOP
    GOTO        SEND_MA104_PREPARE_LOOP
;-------------------------------------------
;要讀的資料大於6
CMD_READ_ROM_BIG_SIX_LOOP
BANKSEL         BANK2
    MOVF        RX_TEMP2,W
BANKSEL         BANK0
    MOVWF       UART_TX_TATLE_DATA_COUNT
    MOVWF       BANK0_DATA_COUNT
    MOVLW       0X06
    SUBWF       UART_TX_TATLE_DATA_COUNT,F

    MOVLW       0X06
    MOVWF       UART_TX_READY_FSR_TEMP
    MOVLW       0X01
    MOVWF       FSR0H
    MOVLW       RX_TEMP0
    MOVWF       FSR0L
    CALL        CMD_READ_STORE_BUFFER_LOOP
;----------
    MOVLW       0X01
    MOVWF       FSR0H
    MOVLW       RX_TEMP0
    MOVWF       FSR0L
    GOTO        MA104_PRE_TX_DATA_LOOP
;===============================================
;=============寫多個EEPROM 資料=================
;===============================================
;從ROM寫多個BYTE資料
CMD_WRITE_MORE_ROM_LOOP
;BANKSEL         PORTA
;    BTFSC       FLAG0_BANK0,WRITE_E_ENABLE_F
;    GOTO        CMD_ROM_BEEN_WRITE_LOOP        
BANKSEL         BANK2
    MOVF        RX_TEMP3,W
BANKSEL         PORTA
    MOVWF       UART_EE_ADR_TEMP
BANKSEL         BANK2
    MOVF        RX_TEMP2,W
BANKSEL         PORTA
    MOVWF       UART_EE_COUNT
    CLRF        UART_EE_FSR_TEMP
CMD_WRITE_MORE_ROM_LOOP1
    MOVLW       0X01
    MOVWF       FSR0H
    MOVLW       RX_TEMP4
    MOVWF       FSR0L
    MOVF        UART_EE_FSR_TEMP,W
    ADDWF       FSR0L,F
;----------
    MOVF        UART_EE_ADR_TEMP,W
    MOVWF       EEPROM_ADR
    MOVF        INDF0,W
    MOVWF       EEPROM_DAT
    CALL        WRITE_EEPROM
    ;RETURN
;----------
CMD_WRITE_MORE_ROM_LOOP2
    INCF        UART_EE_FSR_TEMP,F
    INCF        UART_EE_ADR_TEMP,F
    DECFSZ      UART_EE_COUNT,F
    GOTO        CMD_WRITE_MORE_ROM_LOOP1
    GOTO        WRITE_SEND_ACK_LOOP  
;CMD_ROM_BEEN_WRITE_LOOP 
;    CALL        WRITE_EEPROM
;    BTFSC       FLAG0_BANK0,WRITE_E_ENABLE_F
;    RETURN
;    GOTO        CMD_WRITE_MORE_ROM_LOOP2
;-------------------------------------------
CMD_READ_MORE_RAM_LOOP
BANKSEL         BANK2
    MOVF        RX_TEMP3,W
BANKSEL         BANK1
    MOVWF       FSR0L
    CLRF        FSR0H
    MOVLW       0X01
    MOVWF       SEND_DATA3
    MOVF        INDF0,W
    MOVWF       SEND_DATA4
    CLRF        SEND_DATA5
    CLRF        SEND_DATA6
    CLRF        SEND_DATA7
    CLRF        SEND_DATA8
    CLRF        SEND_DATA9
    GOTO        SEND_MA104_PREPARE_LOOP
;===============================================
;==============讀多個FLASH 資料=================
;===============================================
;讀多個FLASH資料
CMD_READ_MORE_FLASH_LOOP
BANKSEL         BANK2
     MOVF       RX_TEMP3,W
     MOVWF      FLASH_ADR_H
     MOVF       RX_TEMP4,W
     MOVWF      FLASH_ADR_L
     MOVF       RX_TEMP2,W
     MOVWF      STORE_DATA_COUNT_BANK2
BANKSEL         PORTA
     MOVWF      FLASH_COUNT
MOVLW 0X01
MOVWF FSR1H
MOVLW RX_TEMP0
MOVWF FSR1L
PAGESEL         0X1800
     CALL       PREPARE_READ_FLASH_LOOP_1800
PAGESEL         0X0000
;-----------
BANKSEL         BANK2
    MOVLW       0XFA
    ADDWF       STORE_DATA_COUNT_BANK2,W
    BTFSC       STATUS,C
    GOTO        CMD_READ_FLASH_BIG_SIX_LOOP
CMD_READ_FLASH_SMALL_SIX_LOOP
;要讀的資料小於6
BANKSEL         BANK2
    MOVF        STORE_DATA_COUNT_BANK2,W
BANKSEL         PORTA
    MOVWF       BANK0_DATA_COUNT
BANKSEL         BANK1
    MOVWF       SEND_DATA3
    CLRF        FSR0H
    MOVLW       SEND_DATA4
    MOVWF       FSR0L
    CALL        CMD_READ_STORE_BUFFER_LOOP
    GOTO        SEND_MA104_PREPARE_LOOP



;要讀的資料大於6
CMD_READ_FLASH_BIG_SIX_LOOP
BANKSEL         BANK2
    MOVF        STORE_DATA_COUNT_BANK2,W
BANKSEL         BANK0
    MOVWF       UART_TX_TATLE_DATA_COUNT
    MOVWF       BANK0_DATA_COUNT
    MOVLW       0X06
    SUBWF       UART_TX_TATLE_DATA_COUNT,F
    MOVLW       0X06
    MOVWF       UART_TX_READY_FSR_TEMP
;----------
    MOVLW       0X01
    MOVWF       FSR0H
    MOVLW       RX_TEMP0
    MOVWF       FSR0L
    GOTO        MA104_PRE_TX_DATA_LOOP
;===============================================
;==============寫一個PAGE FLASH=================
;===============================================
CMD_WRITE_MORE_FLASH_LOOP
BANKSEL         PORTA
;    BTFSC       FLAG0_BANK0,ERASE_F_ENABLE_F
;    GOTO        CMD_WRITE_FLASH_LEVEL2_LOOP
;     BTFSC       FLAG0_BANK0,WRITE_OVER_F_ENABLE_F
;     GOTO        CMD_WRITE_FLASH_LEVEL3_LOOP
BANKSEL          BANK2
     MOVF        RX_TEMP3,W
     MOVWF       FLASH_ADR_H
     MOVF        RX_TEMP4,W
     MOVWF       FLASH_ADR_L
     MOVF        RX_TEMP2,W
     MOVWF       STORE_DATA_COUNT_BANK2
BANKSEL          PORTA
     MOVLW       0X20
     MOVWF       FLASH_COUNT
MOVLW 0X05
MOVWF FSR0H
MOVLW 0XA0
MOVWF FSR0L
;-------------------------
;讀出原本的FLASH資料
READ_ORGIN_PAGE_FLASH_LOOP
PAGESEL          0X2000
     CALL        READ_FLASH_LOOP_2000
PAGESEL          0X0000
BANKSEL          PORTA
     MOVF        FLASH_DAT_H,W
     MOVWF       INDF0
     INCF        FSR0L,F
     MOVF        FLASH_DAT_L,W
     MOVWF       INDF0
     INCF        FSR0L,F
     INCF        FLASH_ADR_L,F
     DECFSZ      FLASH_COUNT,F
     GOTO        READ_ORGIN_PAGE_FLASH_LOOP
;---------------------------------------------------




;----------
MOVLW 0X05
MOVWF FSR0H
MOVLW 0XA0
MOVWF FSR0L

MOVLW 0X01
MOVWF FSR1H
MOVLW RX_TEMP5
MOVWF FSR1L
     INCF       FSR0L,F
;-------------------------
;更新FLASH資料
RENEW_ORGIN_PAGE_FLASH_LOOP
BANKSEL         BANK2
     MOVF       INDF1,W
     MOVWF      INDF0
     INCF       FSR1L,F
     INCF       FSR0L,F
     INCF       FSR0L,F
     DECFSZ     STORE_DATA_COUNT_BANK2,F
     GOTO       RENEW_ORGIN_PAGE_FLASH_LOOP
;----------


;





BANKSEL         BANK2
     MOVF       RX_TEMP3,W
     MOVWF      FLASH_ADR_H
     MOVF       RX_TEMP4,W
     MOVWF      FLASH_ADR_L
     CALL       ERASE_FLASH_LOOP

;BANKSEL PD
;BSF PD,0X02
;BCF PD,0X02
;BANKSEL PORTA
;     RETURN
;;----------------------------------------------------
;CMD_WRITE_FLASH_LEVEL2_LOOP
;     CALL       ERASE_FLASH_LOOP
;BANKSEL         PORTA
;     BTFSC      FLAG0_BANK0,ERASE_F_ENABLE_F
;     RETURN

    ; GOTO        WRITE_SEND_ACK_LOOP
;--------------
MOVLW 0X05
MOVWF FSR1H
MOVLW 0XA0
MOVWF FSR1L
BANKSEL          BANK2
     MOVF        RX_TEMP3,W
     MOVWF       FLASH_ADR_H
     MOVF        RX_TEMP4,W
     MOVWF       FLASH_ADR_L
     ;MOVF        RX_TEMP2,W
BANKSEL          PORTA
     MOVLW       0X1F
     MOVWF       FLASH_COUNT
     BCF         FLAG0_BANK0,EE_W_OK_F
     CALL        WRITE_FLASH_LOOP
     ;RETURN
;CMD_WRITE_FLASH_LEVEL3_LOOP
;     CALL       WRITE_FLASH_LOOP
;BANKSEL         PORTA
;     BTFSC      FLAG0_BANK0,WRITE_OVER_F_ENABLE_F
;     RETURN
     GOTO        WRITE_SEND_ACK_LOOP

















CMD_WRITE_MORE_RAM_LOOP
CMD_READ_SINGLE_RAM_LOOP
CMD_WRITE_SINGLE_RAM_LOOP
    GOTO        EXIT_DEAL_UART_LOOP





SEND_MA104_PREPARE_LOOP
BANKSEL         SEND_DATA1
    MOVLW       0X02
    MOVWF       SEND_DATA1
    MOVLW       0X05
    MOVWF       SEND_DATA2
    CALL        MA104_CHECKSUM_LOOP
BANKSEL         PORTA
    CLRF        UART_TX_TATLE_DATA_COUNT
    GOTO        EXIT_DEAL_UART_LOOP 
WRITE_SEND_ACK_LOOP
BANKSEL         BANK1 
    MOVLW       0X01
    MOVWF       SEND_DATA3
    MOVLW       0X5E
    MOVWF       SEND_DATA4
    CLRF        SEND_DATA5
    CLRF        SEND_DATA6
    CLRF        SEND_DATA7
    CLRF        SEND_DATA8
    CLRF        SEND_DATA9
    GOTO        SEND_MA104_PREPARE_LOOP
MA104_PRE_TX_DATA_LOOP
BANKSEL          SEND_DATA1
     MOVLW       0X02
     MOVWF       SEND_DATA1
     MOVLW       0X05
     MOVWF       SEND_DATA2
     MOVLW       0X06
     MOVWF       SEND_DATA3
;----------------------
     MOVF        INDF0,W
     MOVWF       SEND_DATA4
     INCF        FSR0L,F
;----------
     MOVF        INDF0,W
     MOVWF       SEND_DATA5
     INCF        FSR0L,F
;----------
     MOVF        INDF0,W
     MOVWF       SEND_DATA6
     INCF        FSR0L,F
;----------
     MOVF        INDF0,W
     MOVWF       SEND_DATA7
     INCF        FSR0L,F
;----------
     MOVF        INDF0,W
     MOVWF       SEND_DATA8
     INCF        FSR0L,F
;----------
     MOVF        INDF0,W
     MOVWF       SEND_DATA9
;----------
     CALL        MA104_CHECKSUM_LOOP
     GOTO        EXIT_DEAL_UART_LOOP
;-------------------------------------------
CMD_READ_STORE_BUFFER_LOOP
BANKSEL         PORTA
    MOVF        EEPROM_ADR_TEMP,W
    MOVWF       EEPROM_ADR
    CALL        READ_EEPROM
    MOVF        EEPROM_DAT,W
    MOVWF       INDF0
    INCF        EEPROM_ADR_TEMP,F
    INCF        FSR0L,F
    DECFSZ      BANK0_DATA_COUNT,F
    GOTO        CMD_READ_STORE_BUFFER_LOOP
    RETURN

;===============================================
;==============UART_NORMAL_副程式===============
;===============================================
;一BYTE 一BYTE收資料，之後等到資料收到一定數量後再進行判斷
UART_NORMAL_DEAL_WITH_LOOP
BANKSEL         PORTA
    BTFSC       PORTB,0X00                             ;確定MA104沒有在BUSY
    RETURN 
    BTFSC       SP_FLAG,DISABLE_UART_F                 ;判斷目前UART功能有無啟動
    RETURN
    BTFSC       UART_FLAG,UART_BUSY_F                  ;判斷目前UART TIMER有無使用
    RETURN
    BTFSC       UART_FLAG,UART_RX_TX_F                 ;判斷目前是RX還是TX程序
    GOTO        UART_NORMAL_TX_LOOP_FIRST
;;===============================================
;;==============UART_RX副程式====================
;;===============================================
BANKSEL         PORTA
    BTFSC       UART_FLAG,UART_RX_CMD_F                ;判斷是否做過更新要收的資料數量
    GOTO        UART_NORMAL_RX_LOOP1
    MOVF        UART_FSR_TEMP,W
    BTFSC       STATUS,Z
    RETURN
    BSF         UART_FLAG,UART_RX_CMD_F
;根據第一個BYTE(CMD)，決定還要收多少數量資料,如果需要後面的LENS會把UART_FLAG,UART_RX_NUM_F 設為1
BANKSEL         BANK2
    MOVF        RX_TEMP0,W
    MOVWF       NORMAL_TEMP
BANKSEL         PORTA
    BTFSS       NORMAL_TEMP,0X01
    GOTO        UART_RX_SP_CMD_NUM_LOOP
    BTFSC       NORMAL_TEMP,0X00
    GOTO        UART_RX_NOMAL_W_NUM_LOOP
;-------------UART_RX_NUM_F
;表示CMD為通用型
UART_RX_NORMAL_R_NUM_LOOP
    MOVLW       0X06
    XORWF       NORMAL_TEMP,W
    BTFSC       STATUS,Z
    GOTO        UART_SET_DAT_NUMBER_2
;----------
    MOVLW       0X0A
    XORWF       NORMAL_TEMP,W
    BTFSC       STATUS,Z
    GOTO        UART_SET_DAT_NUMBER_2
;----------
;GOTO        UART_SET_DAT_NUMBER_2
    BSF         UART_FLAG,UART_RX_NUM_F
    RETURN        
UART_RX_NOMAL_W_NUM_LOOP
    MOVLW       0X07
    XORWF       NORMAL_TEMP,W
    BTFSC       STATUS,Z
    GOTO        UART_SET_DAT_NUMBER_3
;----------
    MOVLW       0X0B
    XORWF       NORMAL_TEMP,W
    BTFSC       STATUS,Z
    GOTO        UART_SET_DAT_NUMBER_3
;----------
    BSF         UART_FLAG,UART_RX_NUM_F
    RETURN 
UART_SET_DAT_NUMBER_2
    MOVLW       0X02
    MOVWF       UART_RX_COMPARE_TEMP
    RETURN
UART_SET_DAT_NUMBER_3
    MOVLW       0X03
    MOVWF       UART_RX_COMPARE_TEMP
    RETURN
;---------------------------------------------
;表示CMD為專屬
UART_RX_SP_CMD_NUM_LOOP
    MOVLW       0X02
    MOVWF       UART_RX_COMPARE_TEMP
    RETURN
;---------------------------------------------
;表示後面LENS有收到，可以決定還需要收的資料數量
UART_RX_END_NUM_LOOP
;BANKSEL PD
;BSF PD,0X04
;BCF PD,0X04
BANKSEL PORTA
    BCF        UART_FLAG,UART_RX_NUM_F
    BTFSC      NORMAL_TEMP,0X00
    GOTO       UART_RX_W_MORE_NUM_LOOP
UART_RX_R_MORE_NUM_LOOP
BANKSEL        BANK2
    MOVF       RX_TEMP1,W
BANKSEL        BANK0
    MOVWF      UART_RX_COMPARE_TEMP
    MOVLW      0X03
    ADDWF      UART_RX_COMPARE_TEMP,F
    RETURN
UART_RX_W_MORE_NUM_LOOP
BANKSEL        BANK2
    MOVF       RX_TEMP1,W
BANKSEL        BANK0
    MOVWF      UART_RX_COMPARE_TEMP
BANKSEL        BANK2
    MOVF       RX_TEMP2,W
BANKSEL        BANK0
    ADDWF      UART_RX_COMPARE_TEMP,F
    MOVLW      0X03
    ADDWF      UART_RX_COMPARE_TEMP,F
    RETURN
;------------------------------------------
UART_NORMAL_RX_LOOP1
    BTFSS       UART_FLAG,UART_RX_NUM_F
    GOTO        UART_NORMAL_RX_LOOP1_1                     ;表示已經設定要讀的資料數量
;----------
    MOVLW       0XFD
    ADDWF       UART_FSR_TEMP,W
    BTFSS       STATUS,C
    RETURN
    GOTO        UART_RX_END_NUM_LOOP
;---------------------
UART_NORMAL_RX_LOOP1_1
;BANKSEL PD
;BSF PD,0X03
;BCF PD,0X03
BANKSEL         PORTA
;UART_FSR和上面要收到的數量比，如果大於等於就進行判斷CMD的動作
    MOVF        UART_FSR_TEMP,W
    SUBWF       UART_RX_COMPARE_TEMP,W   ;F-W
    BTFSS       STATUS,C 
    GOTO        UART_NORMAL_RX_LOOP2 ;W>F
;----------
    MOVF        UART_FSR_TEMP,W
    XORWF       UART_RX_COMPARE_TEMP,W
    BTFSC       STATUS,Z
    GOTO        UART_NORMAL_RX_LOOP2 ;W=F
    RETURN
UART_NORMAL_RX_LOOP2
;近來表示資料都收完，要進行判斷的動作
;BANKSEL PD
;BSF PD,0X05
;BCF PD,0X05
BANKSEL PORTA
    CLRF        UART_FSR_TEMP
    CLRF        UART_RX_COMPARE_TEMP
    BCF         UART_FLAG,UART_RX_CMD_F
    BCF         UART_FLAG,UART_RX_NUM_F
    BSF         SP_FLAG,DISABLE_UART_F
    BSF         UART_FLAG,UART_RX_INT_CLOSE_F
    BSF         FLAG1_BANK0,UART_RX_OVER_F
    RETURN







;;===============================================
;;==============UART_TX副程式====================
;;===============================================
UART_NORMAL_TX_LOOP_FIRST
BANKSEL         BANK0
    BSF         UART_FLAG,UART_BUSY_F
;將要傳送的資料先放進暫存器中
;啟動TIMER
;之後每次都判斷TX是否完成通訊，如果完成就判斷資料是否送完
;多找一個FSR TEMP來處理
    BTFSC       UART_FLAG,UART_TX_FIRST_IN                 ;判斷是否第一次進入TX程序
    GOTO        UART_NORMAL_TX_LOOP2
UART_NORMAL_TX_LOOP1
    CLRF        FSR1H
    MOVLW       SEND_DATA1
    MOVWF       FSR1L
    CLRF        UART_TX_FSR_TEMP
    MOVLW       0X0A
    MOVWF       UART_BYTE_COUNT
    BSF         UART_FLAG,UART_TX_FIRST_IN
    GOTO        UART_NORMAL_TX_LOOP3
UART_NORMAL_TX_LOOP2
    BTFSS       UART_FLAG,UART_TX_NEXT_F                   ;判斷是否可以傳送下一筆 資料
    RETURN 
UART_NORMAL_TX_LOOP3
    MOVLW       0X09                                       ;START+8BIT
    MOVWF       UART_BIT_COUNT
    BCF         UART_FLAG,UART_TX_NEXT_F
;----------
BANKSEL         PIE3
    BSF         PIE3,TMR6IE
BANKSEL         T6CON
    BSF         T6CON,TMR6ON
BANKSEL         PORTA
;----------
    CLRF        FSR1H
    MOVLW       SEND_DATA1
    MOVWF       FSR1L
    MOVF        UART_TX_FSR_TEMP,W
    ADDWF       FSR1L,F
;----------
    MOVF        INDF1,W
    MOVWF       UART_DATA_TEMP
    INCF        UART_TX_FSR_TEMP,F
BANKSEL         PB
    BCF         PB,0X01
BANKSEL         PORTA
    DECFSZ      UART_BYTE_COUNT,F     ;這邊的是單次MA104要送的資料數量(10BYTE)
    RETURN
;-----------------------------------
;判斷總共要送的資料數量是否送完
;如果送完就關閉UART動作
;尚未送完就根據資料數量繼續
    MOVF        UART_TX_TATLE_DATA_COUNT,W
    BTFSC       STATUS,Z
    GOTO        UART_TX_CLOSE_LOOP
;----------
    BCF         UART_FLAG,UART_TX_FIRST_IN
    BCF         UART_FLAG,UART_TX_NEXT_F
    MOVLW       0XFA
    ADDWF       UART_TX_TATLE_DATA_COUNT,W
    BTFSC       STATUS,C
    GOTO        UART_TX_SEND_6_LOOP
;-------------------------------------------
;剩餘發送資料小於6筆
UART_TX_SEND_SMALL_LOOP
BANKSEL         SEND_DATA1
    MOVLW       0X02
    MOVWF       SEND_DATA1
    MOVLW       0X05
    MOVWF       SEND_DATA2
BANKSEL         UART_TX_TATLE_DATA_COUNT
    MOVF        UART_TX_TATLE_DATA_COUNT,W
BANKSEL         SEND_DATA3
    MOVWF       SEND_DATA3
;------------
    CLRF        FSR0H
    MOVLW       SEND_DATA4
    MOVWF       FSR0L
;-----------
    MOVLW       0X01
    MOVWF       FSR1H 
    MOVLW       RX_TEMP0
    MOVWF       FSR1L
;-----------
    CALL        UART_TX_CLEAR_OLD_LOOP
BANKSEL         UART_BYTE_COUNT
    MOVF        UART_TX_TATLE_DATA_COUNT,W
    MOVWF       UART_BYTE_COUNT
    MOVF        UART_TX_READY_FSR_TEMP,W
    ADDWF       FSR1L,F
    CLRF        UART_TX_TATLE_DATA_COUNT
UART_TX_SEND_SMALL_LOOP1
    MOVF        INDF1,W
    MOVWF       INDF0
    INCF        FSR1L,F
    INCF        FSR0L,F
    DECFSZ      UART_BYTE_COUNT,F
    GOTO        UART_TX_SEND_SMALL_LOOP1
    CALL        MA104_CHECKSUM_LOOP
BANKSEL         PORTA
    RETURN
;--------------------------------------------------
;送資料超過6筆以上
UART_TX_SEND_6_LOOP
    CLRF        FSR0H
    MOVLW       SEND_DATA4
    MOVWF       FSR0L
;-----------
    MOVLW       0X01
    MOVWF       FSR1H
    MOVLW       RX_TEMP0
    MOVWF       FSR1L
;-----------
BANKSEL         SEND_DATA1
    MOVLW       0X02
    MOVWF       SEND_DATA1
    MOVLW       0X05
    MOVWF       SEND_DATA2
    MOVLW       0X06
    MOVWF       SEND_DATA3
BANKSEL         UART_BYTE_COUNT
    MOVLW       0X06
    MOVWF       UART_BYTE_COUNT
    MOVF        UART_TX_READY_FSR_TEMP,W
    ADDWF       FSR1L,F
    MOVLW       0X06
    ADDWF       UART_TX_READY_FSR_TEMP,F
    SUBWF       UART_TX_TATLE_DATA_COUNT,F
UART_TX_SEND_6_LOOP1
    MOVF        INDF1,W
    MOVWF       INDF0
    INCF        FSR0L,F
    INCF        FSR1L,F
    DECFSZ      UART_BYTE_COUNT,F
    GOTO        UART_TX_SEND_6_LOOP1
    CALL        MA104_CHECKSUM_LOOP
BANKSEL         PORTA
    RETURN
;-------------------------------------------
;關閉UART_TX功能
UART_TX_CLOSE_LOOP
;BANKSEL PD
;BSF PD,0X05
;BCF PD,0X05
BANKSEL PORTA
    CLRF        UART_FSR_TEMP
    CLRF        UART_RX_COMPARE_TEMP
    BCF         UART_FLAG,UART_RX_INT_CLOSE_F
    BSF         SP_FLAG,DISABLE_UART_F
    BCF         UART_FLAG,UART_TX_FIRST_IN
    BCF         UART_FLAG,UART_TX_NEXT_F								 
    RETURN
										 
UART_TX_CLEAR_OLD_LOOP									 
BANKSEL         SEND_DATA4
    CLRF        SEND_DATA4
    CLRF        SEND_DATA5
    CLRF        SEND_DATA6
    CLRF        SEND_DATA7
    CLRF        SEND_DATA8
    CLRF        SEND_DATA9
    RETURN
;=========================
;==MA104_CHECKSUM生成=====
;=========================
MA104_CHECKSUM_LOOP
BANKSEL         BANK1
    MOVF        SEND_DATA2,W
    MOVWF       SEND_DATA10
    MOVF        SEND_DATA3,W
    XORWF       SEND_DATA10,F
    MOVF        SEND_DATA4,W
    XORWF       SEND_DATA10,F
    MOVF        SEND_DATA5,W
    XORWF       SEND_DATA10,F
    MOVF        SEND_DATA6,W
    XORWF       SEND_DATA10,F
    MOVF        SEND_DATA7,W
    XORWF       SEND_DATA10,F
    MOVF        SEND_DATA8,W
    XORWF       SEND_DATA10,F
    MOVF        SEND_DATA9,W
    XORWF       SEND_DATA10,F
BANKSEL         BANK0
    RETURN


;===============================================
;=================群組動作======================
;===============================================
;TOUCH_STATUS為直接從3585讀出的觸控狀態
;BUTTON_STATUS為重新映射後的觸控狀態
RESOLTING_BUTTON_STATUS_LOOP
    CLRF        BUTTON_STATUS_1
    CLRF        BUTTON_STATUS_2
    BTFSC       TOUCH_STATUS_1,0X00
    BSF         BUTTON_STATUS_1,0X00
;----------
    BTFSC       TOUCH_STATUS_1,0X01
    BSF         BUTTON_STATUS_1,0X01
;----------
    BTFSC       TOUCH_STATUS_1,0X02
    BSF         BUTTON_STATUS_1,0X02
;----------
    BTFSC       TOUCH_STATUS_1,0X03
    BSF         BUTTON_STATUS_1,0X03
;----------
    BTFSC       TOUCH_STATUS_1,0X04
    BSF         BUTTON_STATUS_1,0X04
;----------
    BTFSC       TOUCH_STATUS_1,0X05
    BSF         BUTTON_STATUS_1,0X05
;----------
    BTFSC       TOUCH_STATUS_1,0X06
    BSF         BUTTON_STATUS_1,0X06
;----------
    BTFSC       TOUCH_STATUS_1,0X07
    BSF         BUTTON_STATUS_1,0X07
;----------
;-----------------------
    BTFSC       TOUCH_STATUS_2,0X00
    BSF         BUTTON_STATUS_2,0X00
;----------
    BTFSC       TOUCH_STATUS_2,0X01
    BSF         BUTTON_STATUS_2,0X01
;----------
    BTFSC       TOUCH_STATUS_2,0X02
    BSF         BUTTON_STATUS_2,0X02
;----------
    BTFSC       TOUCH_STATUS_2,0X03
    BSF         BUTTON_STATUS_2,0X03
;----------
    BTFSC       TOUCH_STATUS_2,0X04
    BSF         BUTTON_STATUS_2,0X04
;----------
    BTFSC       TOUCH_STATUS_2,0X05
    BSF         BUTTON_STATUS_2,0X05
;----------
    BTFSC       TOUCH_STATUS_2,0X06
    BSF         BUTTON_STATUS_2,0X06
;----------
    BTFSC       TOUCH_STATUS_2,0X07
    BSF         BUTTON_STATUS_2,0X07
;----------
    RETURN



WRITE_FLASH_LOOP
PAGESEL         0X2000
    CALL        WRITE_FLASH_LOOP_2000
PAGESEL         0X0000
    RETURN
ERASE_FLASH_LOOP
PAGESEL         0X2000
    CALL        ERASE_FLASH_LOOP_2000
PAGESEL         0X0000
    RETURN
WRITE_EEPROM
PAGESEL         0X2000
    CALL        WRITE_EEPROM_2000
PAGESEL         0X0000  
    RETURN
READ_EEPROM
PAGESEL         0X2000
    CALL        READ_EEPROM_2000
PAGESEL         0X0000
    RETURN
;===============================================
;=================控制輸出SB3585PWM=============
;===============================================
OUTPUT_SB3585_LOOP
PAGESEL         0X2000
    CALL        OUTPUT_SB3585_LOOP_2000
PAGESEL         0X0000
    RETURN
;===============================================
;=================讀取3585觸控狀態==============
;===============================================
;SP_FLAG,SET_ADR_80_A0_F 0--80  1--A0
READ_SB3585_TOUCH_STATUS_LOOP
PAGESEL         0X2000
    CALL        READ_SB3585_TOUCH_STATUS_LOOP_2000
PAGESEL         0X0000
    RETURN
;===============================================
;=================INIT_3585狀態=================
;===============================================
INT_I2C_PREPARE_LOOP
PAGESEL         0X2000
    CALL        INT_I2C_PREPARE_LOOP_2000
PAGESEL         0X0000
    RETURN
;===============================================
;==============LED計算顏色副程式================
;===============================================
LED_CAL_FUNCTION_LOOP
BANKSEL         BANK4
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL01_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X05
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL01_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X06
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL01_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X07
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL02_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_G,0X02
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL02_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_G,0X03
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL02_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_G,0X04
;---------------------------------      

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL03_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X00
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL03_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_G,0X00
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL03_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_G,0X01
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL04_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X01
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL04_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X00
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL04_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X03
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL05_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_C,0X05
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL05_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X07
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL05_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X06
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL06_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_C,0X00
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL06_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_C,0X06
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL06_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_C,0X07
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL07_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_B,0X05
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL07_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_B,0X06
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL07_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_B,0X07
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL08_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X02
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL08_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X01
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL08_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X00
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL09_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X02
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL09_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X03
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL09_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_F,0X04
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL10_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X04
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL10_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X03
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL10_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X02
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL11_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X07
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL11_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X06
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL11_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X05
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL12_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X06
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL12_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X05
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL12_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X04
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL13_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X07
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL13_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X00
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL13_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_D,0X01
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL14_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X03
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL14_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X02
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL14_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_E,0X01
;---------------------------------

    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL15_R_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X04
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL15_G_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_A,0X05
;-----------
    MOVF        LED_PWM_DOWN_COUNT,W
    XORWF       CAL15_B_TEMP,W 
    BTFSC       STATUS,Z
    BSF         LED_DATA_C,0X01
;-----------------------------------------------------------
    MOVF        LED_PWM_DOWN_COUNT,W
    BTFSC       STATUS,Z
    GOTO        LED_RELOAD_LOOP
    DECF        LED_PWM_DOWN_COUNT,F
BANKSEL         BANK0
    RETURN
LED_RELOAD_LOOP
    MOVLW       0X14
    MOVWF       LED_PWM_DOWN_COUNT
    MOVLW       0X00
    MOVWF       LED_DATA_A
    MOVWF       LED_DATA_B
    MOVWF       LED_DATA_C
    MOVWF       LED_DATA_D
    MOVWF       LED_DATA_E
    MOVWF       LED_DATA_F
    MOVWF       LED_DATA_G
BANKSEL         BANK0
    RETURN
;===============================================
;=================TIMER設定=====================
;===============================================
;-------------------------TIMER4_SETTING--------------------------
SET_TMR4_ON;20ms
BANKSEL         PIE3
    BSF         PIE3,TMR4IE
BANKSEL         T4CON
    ;BSF         T4CON,TMR4ON
    ;MOVLW       0X27
    MOVLW       0X4F
;MOVLW 0X06
    MOVWF       T4CON
;------------------------------
SET_TMR4_COUNT
BANKSEL         TMR4
    CLRF        TMR4
BANKSEL         PR4
    MOVLW       0XFA
;MOVLW 0X80
    MOVWF       PR4
BANKSEL         PIR3
    BCF         PIR3,TMR4IF
    RETURN
;------------------------------
SET_TMR4_OFF
BANKSEL         PIE3
    BCF         PIE3,TMR4IE
BANKSEL         T4CON
    BCF         T4CON,TMR4ON
BANKSEL         PIR3
    BCF         PIR3,TMR4IF
    RETURN

;-------------------------TIMER6_SETTING--------------------------
SET_TMR6_ON;
BANKSEL         PIE3
    BSF         PIE3,TMR6IE
BANKSEL         T6CON
    BSF         T6CON,TMR6ON
;------------------------------
SET_TMR6_COUNT
BANKSEL         T6CON
    MOVLW       0X08
    MOVWF       T6CON
BANKSEL         TMR6
    CLRF        TMR6
    MOVLW       0XCB
;MOVLW 0XC5
    MOVWF       PR6
BANKSEL         PORTA
    BCF         PIR3,TMR6IF
;--------------------
    RETURN

;------------------------------
SET_TMR6_OFF
BANKSEL         PIE3
    BCF         PIE3,TMR6IE
BANKSEL         T6CON
    BCF         T6CON,TMR6ON
BANKSEL         PIR3
    BCF         PIR3,TMR6IF
    RETURN

;-------------------------TIMER2_SETTING--------------------------
SET_TMR2_ON;500us
BANKSEL         PIE1
    BSF         PIE1,TMR2IE
BANKSEL         T2CON
    ;BSF         T2CON,TMR2ON
    MOVLW       0X06
    MOVWF       T2CON
;------------------------------
SET_TMR2_COUNT
    MOVLW       0X00
    MOVWF       TMR2
    MOVLW       0XFA
    MOVWF       PR2
    BCF         PIR1,TMR2IF
    RETURN
;------------------------------
SET_TMR2_OFF
BANKSEL         PIE1
    BCF         PIE1,TMR2IE
BANKSEL         T2CON
    BCF         T2CON,TMR2ON
    BCF         PIR1,TMR2IF
    RETURN
;;-------------------------TIMER1_SETTING--------------------------
;SET_TMR1_ON
;BANKSEL         PIE1
;    BSF         PIE1,TMR1IE
;BANKSEL         T1CON
;    BSF         T1CON,TMR1ON
;BANKSEL         BANK0
;SET_TMR1_COUNT
;    MOVLW       0XF7
;    MOVWF       TMR1H
;    MOVLW       0X00
;    MOVWF       TMR1L
;    BCF         PIR1,TMR1IF
;    RETURN
;=======================================================
;===================== 延遲副程式 ======================
;=======================================================
;FOR 8MHz
;16MHz 只有一半
;佔用 0X20~0X23 REGISTER
;0X20 DELAY_BASE_1 
;0X21 DELAY_BASE_2 
;0X22 DELAY_BASE_3 
;0X23 DELAY_BASE_4 
DELAY_3000ms
    MOVLW       0X1E;30
    MOVWF       DELAY_BASE_4
    GOTO        DELAY_500ms_2
;------------------------------
DELAY_1000ms
    MOVLW       0X0A;0A
    MOVWF       DELAY_BASE_4
    GOTO        DELAY_500ms_2
;------------------------------
DELAY_500ms
    MOVLW       0X05
    MOVWF       DELAY_BASE_4
;------------------------------
DELAY_500ms_2
    CALL        DELAY_100ms
    DECFSZ      DELAY_BASE_4,F
    GOTO        DELAY_500ms_2
    RETURN  
;------------------------------
DELAY_100ms
    MOVLW       0XC8
    MOVWF       DELAY_BASE_2
    MOVLW       0XFA
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_40ms
    MOVLW       0XC8
    MOVWF       DELAY_BASE_2
    MOVLW       0X63
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_20ms
    MOVLW       0XC8
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_10ms
    MOVLW       0X64
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_5ms
    MOVLW       0X32
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_4ms
    MOVLW       0X38
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_3ms
    MOVLW       0X1E
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_2ms
    MOVLW       0X14
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
DELAY_1ms
    MOVLW       0X0A
    MOVWF       DELAY_BASE_2
    MOVLW       0X31
    MOVWF       DELAY_BASE_1
    MOVWF       DELAY_BASE_3
    GOTO        DELAY_LOOP_1
;------------------------------
;------------------------------
DELAY_LOOP_1
    NOP                 ;1
    DECFSZ      DELAY_BASE_3,F  ;2
    GOTO        DELAY_LOOP_1;3,4(0.5*4*49 = 98us)
    MOVF        DELAY_BASE_1,W  ;4
    MOVWF       DELAY_BASE_3    ;1
    DECFSZ      DELAY_BASE_2,F  ;2
    GOTO        DELAY_LOOP_1   ;3,4 ((98+2)*C8(200) = 20.00ms) 
    RETURN
;---------------------------------------------------- 
;---------------------------------------------------- 

DELAY_900us
    CALL        DELAY_100us
;------------------------------
DELAY_800us
    CALL        DELAY_100us
;------------------------------
DELAY_700us
    CALL        DELAY_100us
;------------------------------
DELAY_600us
    CALL        DELAY_100us
;------------------------------
DELAY_500us
    CALL        DELAY_100us
;------------------------------
DELAY_400us
    CALL        DELAY_100us
;------------------------------
DELAY_300us
    CALL        DELAY_100us
;------------------------------
DELAY_200us
    CALL        DELAY_100us
;------------------------------
DELAY_100us
    CALL        DELAY_10us
;------------------------------
DELAY_90us
    CALL        DELAY_10us
;------------------------------
DELAY_80us
    CALL        DELAY_10us
;------------------------------
DELAY_70us
    CALL        DELAY_10us
;------------------------------
DELAY_60us
    CALL        DELAY_10us
;------------------------------
DELAY_50us
    CALL        DELAY_10us
;------------------------------
DELAY_40us
    CALL        DELAY_10us
;------------------------------
DELAY_30us
    CALL        DELAY_10us
;------------------------------
DELAY_20us
    CALL        DELAY_10us
;------------------------------
DELAY_10us
    NOP 
    NOP
;------------------------------
DELAY_9us 
    NOP 
    NOP
;------------------------------
DELAY_8us 
    NOP 
    NOP
;------------------------------
DELAY_7us 
    NOP 
    NOP
;------------------------------
DELAY_6us 
    NOP 
    NOP 
;------------------------------
DELAY_5us
    NOP 
    NOP 
;------------------------------
DELAY_4us
    NOP 
    NOP
;------------------------------ 
DELAY_3us
    NOP 
    NOP
;------------------------------
DELAY_2us 
    RETURN
;===============================================
;==========儲存中斷剛進入時的影子資料===========
;===============================================
;29A4 SHAD_STATUS 
;執行時間:4us以內 
STORE_INT_SHAD_DATA_LOOP
    CLRF       FSR0H
    MOVF       INT_POINT_FSR_TEMP,W ;C0
    MOVWF      FSR0L
;----------
BANKSEL        STATUS_SHAD
STORE_INT_SHAD_DATA_LOOP1
    MOVF       STATUS_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       WREG_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------  
    MOVF       BSR_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       PCLATH_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       FSR0L_SHAD,W    
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       FSR0H_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       FSR1L_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       FSR1H_SHAD,W
    MOVWF      INDF0
    INCF       FSR0L,F
;----------
    MOVF       FSR0L,W
    MOVWF      INT_POINT_FSR_TEMP
;;----------
    RETURN
;===============================================
;=========離開中斷返回進入時的影子資料==========
;===============================================
LOAD_INT_SHAD_DATA_LOOP
;執行時間:4us以內 
    BCF        INTCON,GIE
    DECF       INT_POINT_FSR_TEMP,F
    CLRF       FSR0H
    MOVF       INT_POINT_FSR_TEMP,W
    MOVWF      FSR0L
BANKSEL        STATUS_SHAD
    MOVF       INDF0,W
    MOVWF      FSR1H_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      FSR1L_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      FSR0H_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      FSR0L_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      PCLATH_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      BSR_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      WREG_SHAD
    DECF       FSR0L,F
;----------
    MOVF       INDF0,W
    MOVWF      STATUS_SHAD
;DECF       FSR0L,F
;----------
    MOVF       FSR0L,W
    MOVWF      INT_POINT_FSR_TEMP
;----------
    RETFIE

;========================================================================================================================
;===============================================中斷副程式===============================================================
;========================================================================================================================
                                            ORG  0X06F8
;===============================================
;==============中斷副程式額外指向===============
;===============================================
INTERRUPT_POINT_LOOP
;----------
    BTFSC       INTCON,IOCIF
    GOTO        INTERRUPT_BUTTON_LOOP 
;----------
    BTFSC       PIR2,EEIF
    GOTO        EEPROM_FLASH_WRITE_FINISH_LOOP
;----------
    BTFSC       PIR1,SSP1IF
    GOTO        HW_I2C_INTERRUPT_LOOP
;----------
    GOTO        LOAD_INT_SHAD_DATA_LOOP




;===============================================
;===========EEPROM和FLASH完成寫入後=============
;===============================================
EEPROM_FLASH_WRITE_FINISH_LOOP
BANKSEL         PIR2
    BCF         PIR2,EEIF
BANKSEL         PORTA
    BSF         FLAG0_BANK0,EE_W_OK_F
    GOTO        LOAD_INT_SHAD_DATA_LOOP

;===============================================
;===============INT_UART_RX_初始化==============
;===============================================
;邊緣觸發 表示UART RX開始接受資料
INTERRUPT_BUTTON_LOOP
BANKSEL         PIE3
    BSF         PIE3,TMR6IE
BANKSEL         T6CON
    BSF         T6CON,TMR6ON
;------------------------------
BANKSEL         PORTA
    MOVLW       0X08
    MOVWF       UART_BIT_COUNT
    BSF         UART_FLAG,UART_BUSY_F                 ;設定UART通訊BUSY
    BCF         UART_FLAG,UART_RX_TX_F                ;設定目前UART狀態為RX 
    BCF         SP_FLAG,DISABLE_UART_F      
;------------------------------
INTERRUPT_BUTTON_LOOP1                                ;關閉邊緣觸發功能，防止RX收資料時又會進入到邊緣觸發中斷的迴圈
BANKSEL         IOCBF                                 ;造成接收BIT的時間不同
    BCF         IOCBF,IOCBF2
    CLRF        IOCBN
    BCF         INTCON,IOCIF
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;===============================================
;=================TIMER6_副程式=================
;===============================================
;UART RX/TX 處理資料時同時發生中斷(暫)
TIMER6_BASE_LOOP
BANKSEL         TMR6                            ;5
    CLRF        TMR6                            ;6
BANKSEL         PIR3                            ;7
    BCF         PIR3,TMR6IF                     ;8
;---------
    BTFSC       UART_FLAG,UART_RX_TX_F
    GOTO        TIMER6_TX_LOOP
    GOTO        TIMER6_RX_LOOP
;===============================================
;==============TIMER6_RX中斷副程式==============
;===============================================
TIMER6_RX_LOOP
    BTFSC       UART_FLAG,UART_RX_INT_CLOSE_F          ;當收完該CMD的所有資料後，FLAG會設起表示之後再來的資料會直接忽略掉
    GOTO        TIMER6_BASE_EXIT_LOOP
TIMER6_RX_LOOP1
;BANKSEL PD
;BSF PD,0X07
;BCF PD,0X07
BANKSEL PORTA
BANKSEL         PORTA
    RRF         UART_DATA_TEMP,F
    BCF         UART_DATA_TEMP,0X07
    BTFSC       MA104_PORT,INT_RX
    BSF         UART_DATA_TEMP,0X07
    DECFSZ      UART_BIT_COUNT,F
    RETFIE
;----------
;收完一個BYTE把資料存進REG中
;0X01 FSR1H 如果外面沒有使用到FSR1的話，可以不用額外再寫

    MOVLW       0X01
    MOVWF       FSR1H
    MOVLW       RX_TEMP0
    MOVWF       FSR1L
    MOVF        UART_FSR_TEMP,W
    ADDWF       FSR1L,F
    MOVF        UART_DATA_TEMP,W
    MOVWF       INDF1
    INCF        UART_FSR_TEMP,F
;---------------------------
;關閉TIMER6中斷 
;開啟邊緣觸發中斷功能
TIMER6_BASE_EXIT_LOOP
BANKSEL         PIE3
    BCF         PIE3,TMR6IE
BANKSEL         T6CON
    BCF         T6CON,TMR6ON
;----------
BANKSEL         IOCBN
    BCF         INTCON,IOCIF
    BCF         IOCBF,IOCBF2
    BSF         IOCBN,0X02
BANKSEL         PORTA
    BCF         UART_FLAG,UART_BUSY_F
TIMER6_EXIT
    RETFIE
;===============================================
;==============TIMER6_TX中斷副程式==============
;===============================================
;TX程序
TIMER6_TX_LOOP
;BANKSEL PD
;BSF PD,0X06
;BCF PD,0X06
;BANKSEL PORTA
BANKSEL         UART_FLAG
    BTFSC       UART_FLAG,UART_TX_LAST_F
    GOTO        TIMER6_TX_LOOP2                ;UART TX已經送完最後一筆資料，要把TX腳位拉到HI
    MOVLW       0X01
    XORWF       UART_BIT_COUNT,W
    BTFSC       STATUS,Z
    GOTO        TIMER6_TX_LOOP1                ;表示上一筆送出的為最後一BIT的資料，下次時間到要把TX拉到HI
    BTFSS       UART_DATA_TEMP,0X00
    BCF         BASEMENT_TEMP,0X00
    BTFSC       UART_DATA_TEMP,0X00
    BSF         BASEMENT_TEMP,0X00
    RRF         UART_DATA_TEMP,F
;----------
BANKSEL         PB
    BTFSS       BASEMENT_TEMP,0X00
    BCF         PB,0X01
    BTFSC       BASEMENT_TEMP,0X00
    BSF         PB,0X01
BANKSEL         PORTA
;---------
    DECFSZ      UART_BIT_COUNT,F
    GOTO        TIMER6_EXIT
TIMER6_TX_LOOP1
    BSF         UART_FLAG,UART_TX_LAST_F
    BCF         UART_FLAG,UART_TX_NEXT_F    
    GOTO        TIMER6_EXIT
TIMER6_TX_LOOP2
BANKSEL         PB
    BSF         PB,0X01
BANKSEL         PORTA
    BCF         UART_FLAG,UART_TX_LAST_F
    BSF         UART_FLAG,UART_TX_NEXT_F    
    GOTO        TIMER6_BASE_EXIT_LOOP
;===============================================
;=================TIMER2_副程式=================
;===============================================
TIMER2_BASE_LOOP
;BANKSEL PD
;BSF PD,0X02
;BCF PD,0X02
;---------------------------------------------------;
;PWM要執行的動作時間(單LED控制約3-4us)
TIMER2_BASE_LOOP1
BANKSEL         TMR2                             ;1
    CLRF        TMR2                             ;2
    BCF         PIR1,TMR2IF                      ;3
;---------
BANKSEL         PA                               ;4
    MOVF        LED_DATA_A,W                     ;5
    MOVWF       PA                               ;6
;----------------------------
;    MOVF        LED_DATA_B,W
;    MOVWF       PB
    BTFSC       LED_DATA_B,0X05
    BSF         PB,0X05
    BTFSS       LED_DATA_B,0X05
    BCF         PB,0X05
    BTFSC       LED_DATA_B,0X06
    BSF         PB,0X06
    BTFSS       LED_DATA_B,0X06
    BCF         PB,0X06
    BTFSC       LED_DATA_B,0X07
    BSF         PB,0X07
    BTFSS       LED_DATA_B,0X07
    BCF         PB,0X07
;----------------------------
    BSF         LED_DATA_C,0X02
    MOVF        LED_DATA_C,W                     ;9
    MOVWF       PC                               ;10
;----------------------------
    MOVF        LED_DATA_D,W                    ;11
    MOVWF       PD                              ;12
;----------------------------
    MOVF        LED_DATA_E,W                     ;13
    MOVWF       PE                               ;14
;----------------------------  
BANKSEL         PF                               ;15
    MOVF        LED_DATA_F,W                     ;16
    MOVWF       PF                               ;17
;----------------------------
    MOVF        LED_DATA_G,W                     ;18
    MOVWF       PG                               ;19
;----------------------------
BANKSEL         PORTA                                   ;20
    BSF         FLAG0_BANK0,CAL_LED_F            ;21
    ;RETFIE


DECFSZ BASE_TIMER_TEMP,F
    RETFIE
;GOTO TIMER2_BASE_2
;MOVLW 0X14
;MOVLW 0X0A
;MOVLW 0X64
MOVLW 0X32
MOVWF BASE_TIMER_TEMP
BSF BUTTON_CONTROL_1_FLAG,DEBOUNCE_TIME_F
RETFIE
;-------------------
;===============================================
;==============I2C硬體中斷副程式================
;===============================================
HW_I2C_INTERRUPT_LOOP
BANKSEL         PIR1
    BCF         PIR1,SSP1IF
    BSF         INTCON,GIE
BANKSEL         SSP1STAT
    BTFSS       SSP1STAT,P
    GOTO        HW_I2C_INTERRUPT_LOOP1
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;-------------------------------
HW_I2C_INTERRUPT_LOOP1
    BTFSC       SSP1CON2,ACKSTAT       ;0 ACK 1 NACK
    GOTO        HW_I2C_INT_STOP_LOOP
;----------
BANKSEL         BANK0
    BTFSC       HW_I2C_FLAG,HW_RECEIVER_LOOP_F
    GOTO        HW_I2C_RECEIVE_SET_LOOP
    MOVF        HW_WRITE_COUNT,W
    BTFSC       STATUS,Z
    GOTO        HW_I2C_TRANSMIT_OVER_LOOP
    DECF        HW_WRITE_COUNT,F
;===============================================
;==============I2C1_WRITE_傳送==================
;===============================================
HW_I2C_INT_TRANSMIT_LOOP
;--------------------------------
    MOVF        HW_I2C_FSR0L_TEMP,W
    MOVWF       FSR0L
    CLRF        FSR0H
;--------------------------------
    MOVF        INDF0,W
BANKSEL         SSP1BUF
    MOVWF       SSP1BUF
BANKSEL         BANK0
    INCF        HW_I2C_FSR0L_TEMP,F
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;===============================================
;==============I2C1_WRITE_最後一筆傳送結束======
;===============================================
HW_I2C_TRANSMIT_OVER_LOOP
    MOVF        HW_READ_COUNT,W
    BTFSC       STATUS,Z
    GOTO        HW_I2C_INT_STOP_LOOP
    BSF         HW_I2C_FLAG,HW_RECEIVER_LOOP_F
BANKSEL         SSP1CON2
    BSF         SSP1CON2,SEN
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;===============================================
;==============I2C1_STOP_程序===================
;===============================================
HW_I2C_INT_STOP_LOOP
BANKSEL         SSP1CON2
    BSF         SSP1CON2,PEN
BANKSEL         BANK0
    BCF         HW_I2C_FLAG,HW_I2C_BUSY_F
    BCF         HW_I2C_FLAG,HW_RECEIVER_LOOP_F
    BCF         HW_I2C_FLAG,HW_RECEIVER_OR_ADR_F
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;===============================================
;==========I2C1_READ_判斷ADR或是DAT程序=========
;===============================================
;ADR ACK
HW_I2C_RECEIVE_SET_LOOP
    BTFSC       HW_I2C_FLAG,HW_RECEIVER_OR_ADR_F;決定送ADR或是收資料
    GOTO        HW_I2C_RECEIVE_LOOP
    MOVLW       HW_BUF_DATA1
    MOVWF       HW_I2C_FSR0L_TEMP
    MOVF        HW_ADR,W
BANKSEL         SSP1BUF
    MOVWF       SSP1BUF
    BSF         SSP1BUF,0X00
BANKSEL         PORTA
    BSF         HW_I2C_FLAG,HW_RECEIVER_OR_ADR_F
    DECF        HW_READ_COUNT,F
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;----------- 
HW_I2C_RECEIVE_LOOP
    BTFSC       HW_I2C_FLAG,HW_RECEIVER_OR_ACK_F
    GOTO        HW_I2C_RESPOND_ACK_LOOP
;------------------
BANKSEL         SSP1CON2
    BSF         SSP1CON2,RCEN   ;SET:RCEN , THEN CLK_OUT
BANKSEL         PORTA
    MOVF        HW_READ_COUNT,W
    BTFSS       STATUS,Z
    DECF        HW_READ_COUNT,F
    BSF         HW_I2C_FLAG,HW_RECEIVER_OR_ACK_F
    GOTO        LOAD_INT_SHAD_DATA_LOOP
;===============================================
;=============I2C1_儲存READ的資料程序===========
;===============================================
HW_I2C_RESPOND_ACK_LOOP
    MOVF        HW_I2C_FSR0L_TEMP,W
    MOVWF       FSR0L
BANKSEL         SSP1BUF
    MOVF        SSP1BUF,W
    MOVWF       INDF0
BANKSEL         PORTA
    INCF        HW_I2C_FSR0L_TEMP,F
    BCF         HW_I2C_FLAG,HW_RECEIVER_OR_ACK_F
    MOVF        HW_READ_COUNT,W
    BTFSS       STATUS,Z
    GOTO        HW_I2C_SEND_ACK
;===============================================
;===============I2C1_送NACK程序=================
;===============================================
HW_I2C_SEND_NACK
BANKSEL         SSP1CON2
    BSF         SSP1CON2,ACKDT  ;N-ACK (0 = ACK, 1 = NACK)
    BSF         SSP1CON2,ACKEN  ;DONE
BANKSEL         PORTA    
    BCF         HW_I2C_FLAG,HW_RECEIVER_LOOP_F    ;READ LOPOP 結束:清除後 不會進入RECEIVER LOOP
    BCF         HW_I2C_FLAG,HW_RECEIVER_OR_ADR_F  ;READ LOPOP 結束:清除後 不會進入 RECEIVER ADR
    BCF         HW_I2C_FLAG,HW_RECEIVER_OR_ACK_F  ;下次執行 RECEIVER DAT / RECEIVER ACK
    GOTO        HW_I2C_INT_STOP_LOOP
;===============================================
;===============I2C1_送ACK程序==================
;===============================================
HW_I2C_SEND_ACK
BANKSEL         SSP1CON2
    BCF         SSP1CON2,ACKDT  ;ACK (0 = ACK, 1 = NACK)
    BSF         SSP1CON2,ACKEN  ;DONE
    GOTO        LOAD_INT_SHAD_DATA_LOOP

	                                        ORG  0x07FC
;TABLE_PARAMETER_LOOP
;     MOVF        CHOICE_BTN_H_DATA,W
;     MOVWF       PCLATH
;     MOVF        CHOICE_BTN_L_DATA,W
;     ;BRW
;ADDWF PCL,F
;========================================================================================================================
;=================================================PAGE1==================================================================
;========================================================================================================================
	                                        ORG  0x0800
;最前面放的是之後要用FLASH燒入改變的資料
;資料順序為:0800 BUTTON1(電容閥值/顏色) /0900 BUTTON2(電容閥值/顏色) 
;FSR 排列順序 BUTTON1一組全部宣告結束後才換下一個按鈕
     RETLW       0XF3
     RETLW       0X10
     RETLW       0XF2
     RETLW       0XE7
;-----------
     RETLW       0XEB
     RETLW       0X8C
     RETLW       0XEB
     RETLW       0X5F
;-----------
     RETLW       0XF9
     RETLW       0XC5
     RETLW       0XF9
     RETLW       0XA0
;-----------
     RETLW       0XFA
     RETLW       0X59
     RETLW       0XFA
     RETLW       0X25
;-----------
     RETLW       0XFC
     RETLW       0XAC
     RETLW       0XFC
     RETLW       0X8A
;-----------
     RETLW       0XED
     RETLW       0X7E
     RETLW       0XED
     RETLW       0X5D
;-----------
     RETLW       0XE9
     RETLW       0X69
     RETLW       0XE9
     RETLW       0X3E
;-----------
     RETLW       0XE2
     RETLW       0X95
     RETLW       0XE2
     RETLW       0X7C
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕A顏色1
	                                        ORG  0x0820
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X00
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕A顏色2
	                                        ORG  0x0840
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X00
;---------
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕A顏色3
	                                        ORG  0x0860
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
															 
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕A顏色4
	                                        ORG  0x0880
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X0A
     RETLW       0X00
     RETLW       0X0A															 

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
	                                        ORG  0x0900
;最前面放的是之後要用FLASH燒入改變的資料
;資料順序為:0800 BUTTON1(電容閥值/顏色) /0900 BUTTON2(電容閥值/顏色) 
;FSR 排列順序 BUTTON1一組全部宣告結束後才換下一個按鈕
     RETLW       0X38
     RETLW       0XA4
     RETLW       0X02
     RETLW       0X03
;-----------
     RETLW       0X22
     RETLW       0XC4
     RETLW       0X05
     RETLW       0X06
;-----------
     RETLW       0X1C
     RETLW       0XE8
     RETLW       0X08
     RETLW       0X09
;-----------
     RETLW       0XFB
     RETLW       0XF4
     RETLW       0X0B
     RETLW       0X0C
;-----------
     RETLW       0XF9
     RETLW       0X9C
     RETLW       0X0E
     RETLW       0X0F
;-----------
     ;RETLW       0X98
     ;RETLW       0X58
     ;RETLW       0X20
     ;RETLW       0X30
     RETLW       0X8E
     RETLW       0X30
     RETLW       0X50
     RETLW       0X60
;-----------
     RETLW       0X49
     RETLW       0X70
     RETLW       0X50
     RETLW       0X60
;-----------
     RETLW       0X4B
     RETLW       0XCB
     RETLW       0X80
     RETLW       0X90
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕B顏色1
	                                        ORG  0x0920
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X0A
;---------0
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X00
;---------1
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X00
;---------2
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X00
;---------3
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X00
;---------4
     RETLW       0X05
     RETLW       0X05
     RETLW       0X05
;---------5
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X0A
;---------6
     RETLW       0X0A
     RETLW       0X0A
     RETLW       0X00
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕B顏色2
	                                        ORG  0x0940
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X0A
     RETLW       0X0A
;---------
;------------------------------------------------------------
;------------------------------------------------------------
;按鈕B顏色3
	                                        ORG  0x0960
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X05
     RETLW       0X05
     RETLW       0X05
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------


;------------------------------------------------------------
;------------------------------------------------------------
;按鈕B顏色3
	                                        ORG  0x0980
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X05
     RETLW       0X05
     RETLW       0X05
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
     RETLW       0X00
     RETLW       0X00
     RETLW       0X0A
;---------
;///////////////////////////////////////////////////////////////////////////////////////
;///////////////////////////////////////////////////////////////////////////////////////
	                                        ORG  0x1800

BBBB_1800
MOVLW 0X08
MOVWF 0X70
BBBBN
BANKSEL PD
BCF   PD,0X06
;-----
BTFSC 0X71,0X07
BSF   PD,0X05
BTFSS 0X71,0X07
BCF   PD,0X05
;-----
BSF   PD,0X06
RLF   0X71,F
DECFSZ  0X70,F
GOTO  BBBBN
BCF   PD,0X05
BCF   PD,0X06
BANKSEL PORTA
RETURN




TABLE_BTN1_1_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_1_DATA,W
    BRW
    GOTO      LED_00_COLOR_0_LOOP_1800
    GOTO      LED_00_COLOR_1_LOOP_1800
    GOTO      LED_00_COLOR_2_LOOP_1800
    GOTO      LED_00_COLOR_3_LOOP_1800
    GOTO      LED_00_COLOR_4_LOOP_1800
    GOTO      LED_00_COLOR_5_LOOP_1800
    GOTO      LED_00_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_2_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_2_DATA,W
    BRW
    GOTO      LED_01_COLOR_0_LOOP_1800
    GOTO      LED_01_COLOR_1_LOOP_1800
    GOTO      LED_01_COLOR_2_LOOP_1800
    GOTO      LED_01_COLOR_3_LOOP_1800
    GOTO      LED_01_COLOR_4_LOOP_1800
    GOTO      LED_01_COLOR_5_LOOP_1800
    GOTO      LED_01_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_3_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_3_DATA,W
    BRW
    GOTO      LED_02_COLOR_0_LOOP_1800
    GOTO      LED_02_COLOR_1_LOOP_1800
    GOTO      LED_02_COLOR_2_LOOP_1800
    GOTO      LED_02_COLOR_3_LOOP_1800
    GOTO      LED_02_COLOR_4_LOOP_1800
    GOTO      LED_02_COLOR_5_LOOP_1800
    GOTO      LED_02_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_4_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_4_DATA,W
    BRW
    GOTO      LED_03_COLOR_0_LOOP_1800
    GOTO      LED_03_COLOR_1_LOOP_1800
    GOTO      LED_03_COLOR_2_LOOP_1800
    GOTO      LED_03_COLOR_3_LOOP_1800
    GOTO      LED_03_COLOR_4_LOOP_1800
    GOTO      LED_03_COLOR_5_LOOP_1800
    GOTO      LED_03_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_5_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_5_DATA,W
    BRW
    GOTO      LED_07_COLOR_0_LOOP_1800
    GOTO      LED_07_COLOR_1_LOOP_1800
    GOTO      LED_07_COLOR_2_LOOP_1800
    GOTO      LED_07_COLOR_3_LOOP_1800
    GOTO      LED_07_COLOR_4_LOOP_1800
    GOTO      LED_07_COLOR_5_LOOP_1800
    GOTO      LED_07_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_6_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_6_DATA,W
    BRW
    GOTO      LED_05_COLOR_0_LOOP_1800
    GOTO      LED_05_COLOR_1_LOOP_1800
    GOTO      LED_05_COLOR_2_LOOP_1800
    GOTO      LED_05_COLOR_3_LOOP_1800
    GOTO      LED_05_COLOR_4_LOOP_1800
    GOTO      LED_05_COLOR_5_LOOP_1800
    GOTO      LED_05_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_7_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_7_DATA,W
    BRW
    GOTO      LED_06_COLOR_0_LOOP_1800
    GOTO      LED_06_COLOR_1_LOOP_1800
    GOTO      LED_06_COLOR_2_LOOP_1800
    GOTO      LED_06_COLOR_3_LOOP_1800
    GOTO      LED_06_COLOR_4_LOOP_1800
    GOTO      LED_06_COLOR_5_LOOP_1800
    GOTO      LED_06_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_BTN1_8_COLOR_1800
BANKSEL       BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    MOVF      SLIDE_BT1_8_DATA,W
    BRW
    GOTO      LED_04_COLOR_0_LOOP_1800
    GOTO      LED_04_COLOR_1_LOOP_1800
    GOTO      LED_04_COLOR_2_LOOP_1800
    GOTO      LED_04_COLOR_3_LOOP_1800
    GOTO      LED_04_COLOR_4_LOOP_1800
    GOTO      LED_04_COLOR_5_LOOP_1800
    GOTO      LED_04_COLOR_6_LOOP_1800
;-----------------------------------------
TABLE_FAN_PWM_LOOP
BANKSEL BANK1
    MOVLW     0X18
    MOVWF     PCLATH
   ; MOVF      PWM_POINT_DATA,W
MOVF BASE_SLIDE_LOCATION,W
    BRW     
    RETLW     0X00;0
    RETLW     0X1A;0
    RETLW     0X1B;0
    RETLW     0X1C;0
    RETLW     0X1D;0
    RETLW     0X1E;0
    RETLW     0X1F;0
    RETLW     0X20;0
    RETLW     0X21;0
    RETLW     0X22;0
    RETLW     0X23;0
TABLE_LED_PWM_LOOP
BANKSEL BANK1
    MOVLW     0X18
    MOVWF     PCLATH
    ;MOVF      PWM_POINT_DATA,W
MOVF BASE_SLIDE_LOCATION,W
    BRW     
    RETLW     0X00;0
    RETLW     0X40;0
    RETLW     0X42;0
    RETLW     0X44;0
    RETLW     0X46;0
    RETLW     0X48;0
    RETLW     0X4A;0
    RETLW     0X4D;0
    RETLW     0X50;0
    RETLW     0X52;0
    RETLW     0X56;0




;===============================================
;==============按鈕一LED程序====================
;===============================================
BUTTON_1_LED_LOOP_1800
    CALL         TABLE_BTN1_1_COLOR_1800
    CALL         TABLE_BTN1_2_COLOR_1800
    CALL         TABLE_BTN1_3_COLOR_1800
    CALL         TABLE_BTN1_4_COLOR_1800
    CALL         TABLE_BTN1_5_COLOR_1800
    CALL         TABLE_BTN1_6_COLOR_1800
    CALL         TABLE_BTN1_7_COLOR_1800
    CALL         TABLE_BTN1_8_COLOR_1800
BANKSEL          PORTA
    RETURN
;===============================================
;==============按鈕二LED程序====================
;===============================================
BUTTON_2_LED_LOOP_1800
BANKSEL          PORTA
BTFSC SP_FLAG,DISABLE_ALL_LED_F
GOTO DISABLE_BTN2_LED_LOOP
     CALL        BUTTON_2_LED_MAP_LOOP_1800
;------------------------------------
     BTFSC       LED_STATUS_2,0X00
     CALL        LED_08_COLOR_2_LOOP
     BTFSS       LED_STATUS_2,0X00
     CALL        LED_08_COLOR_1_LOOP
;--------
     BTFSC       LED_STATUS_2,0X01
     CALL        LED_09_COLOR_2_LOOP
     BTFSS       LED_STATUS_2,0X01
     CALL        LED_09_COLOR_1_LOOP
;--------
     BTFSC       LED_STATUS_2,0X02
     CALL        LED_10_COLOR_2_LOOP
     BTFSS       LED_STATUS_2,0X02
     CALL        LED_10_COLOR_1_LOOP
;--------
     BTFSC       LED_STATUS_2,0X03
     CALL        LED_11_COLOR_2_LOOP
     BTFSS       LED_STATUS_2,0X03
     CALL        LED_11_COLOR_1_LOOP
;--------
     BTFSC       LED_STATUS_2,0X04
     CALL        LED_12_COLOR_2_LOOP
     BTFSS       LED_STATUS_2,0X04
     CALL        LED_12_COLOR_1_LOOP
;--------
     BTFSC       LED_STATUS_2,0X05
     CALL        LED_13_COLOR_1_LOOP
     BTFSS       LED_STATUS_2,0X05
     CALL        LED_13_COLOR_2_LOOP
;--------
     BTFSC       LED_STATUS_2,0X06
     CALL        LED_14_COLOR_1_LOOP
;     BTFSS       LED_STATUS_2,0X06
;     CALL        LED_14_COLOR_1_LOOP
;--------
     BTFSC       LED_STATUS_2,0X07
     CALL        LED_15_COLOR_1_LOOP
;     BTFSS       LED_STATUS_2,0X07
;     CALL        LED_15_COLOR_1_LOOP
     RETURN
;--------------------------------------------------
DISABLE_BTN2_LED_LOOP
     CALL        LED_08_COLOR_0_LOOP    
;CALL LED_08_COLOR_2_LOOP
     CALL        LED_09_COLOR_0_LOOP    
     CALL        LED_10_COLOR_0_LOOP    
     CALL        LED_11_COLOR_0_LOOP    
     CALL        LED_12_COLOR_0_LOOP    
     ;CALL        LED_13_COLOR_0_LOOP    
     CALL        LED_14_COLOR_0_LOOP    
     CALL        LED_15_COLOR_0_LOOP    
     RETURN
;--------------------------------------------------
LED_00_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL01_R_TEMP
     CLRF        CAL01_G_TEMP
     CLRF        CAL01_B_TEMP
     RETURN
LED_00_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_00_COLOR_CHANGE_LOOP
LED_00_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_00_COLOR_CHANGE_LOOP
LED_00_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_00_COLOR_CHANGE_LOOP
LED_00_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_00_COLOR_CHANGE_LOOP
LED_00_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL01_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_00_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL01_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_00_COLOR_CHANGE_LOOP
     MOVLW       CAL01_R_TEMP
     MOVWF       FSR1L
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------

LED_01_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL02_R_TEMP
     CLRF        CAL02_G_TEMP
     CLRF        CAL02_B_TEMP
     RETURN
LED_01_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_01_COLOR_CHANGE_LOOP
LED_01_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_01_COLOR_CHANGE_LOOP
LED_01_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_01_COLOR_CHANGE_LOOP
LED_01_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_01_COLOR_CHANGE_LOOP
LED_01_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL02_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_01_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL02_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_01_COLOR_CHANGE_LOOP
     MOVLW       CAL02_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X03
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------
LED_02_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL03_R_TEMP
     CLRF        CAL03_G_TEMP
     CLRF        CAL03_B_TEMP
     RETURN
LED_02_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_02_COLOR_CHANGE_LOOP
LED_02_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_02_COLOR_CHANGE_LOOP
LED_02_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_02_COLOR_CHANGE_LOOP
LED_02_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_02_COLOR_CHANGE_LOOP
LED_02_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL03_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_02_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL03_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_02_COLOR_CHANGE_LOOP
     MOVLW       CAL03_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X06
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------
LED_03_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL04_R_TEMP
     CLRF        CAL04_G_TEMP
     CLRF        CAL04_B_TEMP
     RETURN
LED_03_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_03_COLOR_CHANGE_LOOP
LED_03_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_03_COLOR_CHANGE_LOOP
LED_03_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_03_COLOR_CHANGE_LOOP
LED_03_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_03_COLOR_CHANGE_LOOP
LED_03_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL04_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_03_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL04_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_03_COLOR_CHANGE_LOOP
     MOVLW       CAL04_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X09
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------
LED_04_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL05_R_TEMP
     CLRF        CAL05_G_TEMP
     CLRF        CAL05_B_TEMP
     RETURN
LED_04_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_04_COLOR_CHANGE_LOOP
LED_04_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_04_COLOR_CHANGE_LOOP
LED_04_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_04_COLOR_CHANGE_LOOP
LED_04_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_04_COLOR_CHANGE_LOOP
LED_04_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL05_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_04_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL05_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_04_COLOR_CHANGE_LOOP
     MOVLW       CAL05_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X0C
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------
LED_05_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL06_R_TEMP
     CLRF        CAL06_G_TEMP
     CLRF        CAL06_B_TEMP
     RETURN
LED_05_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_05_COLOR_CHANGE_LOOP
LED_05_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_05_COLOR_CHANGE_LOOP
LED_05_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_05_COLOR_CHANGE_LOOP
LED_05_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_05_COLOR_CHANGE_LOOP
LED_05_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL06_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_05_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL06_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_05_COLOR_CHANGE_LOOP
     MOVLW       CAL06_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X0F
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------
LED_06_COLOR_0_LOOP_1800
BANKSEL          BANK4
     CLRF        CAL07_R_TEMP
     CLRF        CAL07_G_TEMP
     CLRF        CAL07_B_TEMP
     RETURN
LED_06_COLOR_1_LOOP_1800
     CALL        BUTTON_1_COLOR_1_SET_LOOP
     GOTO        LED_06_COLOR_CHANGE_LOOP
LED_06_COLOR_2_LOOP_1800
     CALL        BUTTON_1_COLOR_2_SET_LOOP
     GOTO        LED_06_COLOR_CHANGE_LOOP
LED_06_COLOR_3_LOOP_1800
     CALL        BUTTON_1_COLOR_3_SET_LOOP
     GOTO        LED_06_COLOR_CHANGE_LOOP
LED_06_COLOR_4_LOOP_1800
     CALL        BUTTON_1_COLOR_4_SET_LOOP
     GOTO        LED_06_COLOR_CHANGE_LOOP
LED_06_COLOR_5_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL07_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_06_COLOR_6_LOOP_1800
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     MOVLW       CAL07_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
LED_06_COLOR_CHANGE_LOOP
     MOVLW       CAL07_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;----------
LED_07_COLOR_0_LOOP_1800
     RETURN
LED_07_COLOR_1_LOOP_1800
     RETURN
LED_07_COLOR_2_LOOP_1800
     RETURN
LED_07_COLOR_3_LOOP_1800
     RETURN
LED_07_COLOR_4_LOOP_1800
     RETURN
LED_07_COLOR_5_LOOP_1800
     RETURN
LED_07_COLOR_6_LOOP_1800
     RETURN
;----------











LED_08_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL08_R_TEMP
     CLRF        CAL08_G_TEMP
     CLRF        CAL08_B_TEMP
     RETURN
LED_08_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_08_COLOR_CHANGE_LOOP
LED_08_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_08_COLOR_CHANGE_LOOP
LED_08_COLOR_CHANGE_LOOP
     MOVLW       CAL08_R_TEMP
     MOVWF       FSR1L
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_09_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL09_R_TEMP
     CLRF        CAL09_G_TEMP
     CLRF        CAL09_B_TEMP
     RETURN
LED_09_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_09_COLOR_CHANGE_LOOP
LED_09_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_09_COLOR_CHANGE_LOOP
LED_09_COLOR_3_LOOP
     CALL        BUTTON_2_COLOR_3_SET_LOOP
     GOTO        LED_09_COLOR_CHANGE_LOOP
LED_09_COLOR_4_LOOP
     CALL        BUTTON_2_COLOR_4_SET_LOOP
     GOTO        LED_09_COLOR_CHANGE_LOOP
LED_09_COLOR_CHANGE_LOOP
     MOVLW       CAL09_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X03
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_10_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL10_R_TEMP
     CLRF        CAL10_G_TEMP
     CLRF        CAL10_B_TEMP
     RETURN
LED_10_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_10_COLOR_CHANGE_LOOP
LED_10_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_10_COLOR_CHANGE_LOOP
LED_10_COLOR_CHANGE_LOOP
     MOVLW       CAL10_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X06
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_11_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL11_R_TEMP
     CLRF        CAL11_G_TEMP
     CLRF        CAL11_B_TEMP
     RETURN
LED_11_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_11_COLOR_CHANGE_LOOP
LED_11_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_11_COLOR_CHANGE_LOOP
LED_11_COLOR_CHANGE_LOOP
     MOVLW       CAL11_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X09
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_12_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL12_R_TEMP
     CLRF        CAL12_G_TEMP
     CLRF        CAL12_B_TEMP
     RETURN
LED_12_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_12_COLOR_CHANGE_LOOP
LED_12_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_12_COLOR_CHANGE_LOOP
LED_12_COLOR_CHANGE_LOOP
     MOVLW       CAL12_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X0C
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_13_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL13_R_TEMP
     CLRF        CAL13_G_TEMP
     CLRF        CAL13_B_TEMP
     RETURN
LED_13_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_13_COLOR_CHANGE_LOOP
LED_13_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_13_COLOR_CHANGE_LOOP
LED_13_COLOR_CHANGE_LOOP
     MOVLW       CAL13_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X0F
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_14_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL14_R_TEMP
     CLRF        CAL14_G_TEMP
     CLRF        CAL14_B_TEMP
     RETURN
LED_14_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_14_COLOR_CHANGE_LOOP
LED_14_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_14_COLOR_CHANGE_LOOP
LED_14_COLOR_CHANGE_LOOP
     MOVLW       CAL14_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X12
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;-----------
LED_15_COLOR_0_LOOP
BANKSEL          BANK4
     CLRF        CAL15_R_TEMP
     CLRF        CAL15_G_TEMP
     CLRF        CAL15_B_TEMP
     RETURN
LED_15_COLOR_1_LOOP
     CALL        BUTTON_2_COLOR_1_SET_LOOP
     GOTO        LED_15_COLOR_CHANGE_LOOP
LED_15_COLOR_2_LOOP
     CALL        BUTTON_2_COLOR_2_SET_LOOP
     GOTO        LED_15_COLOR_CHANGE_LOOP
LED_15_COLOR_CHANGE_LOOP
     MOVLW       CAL15_R_TEMP
     MOVWF       FSR1L
     MOVLW       0X15
     ADDWF       FLASH_ADR_L,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
;===============================================
;==============按鈕二顏色1設定==================
;===============================================
BUTTON_2_COLOR_1_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X09
     MOVWF       FLASH_ADR_H
     MOVLW       0X20
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕二顏色2設定==================
;===============================================
BUTTON_2_COLOR_2_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X09
     MOVWF       FLASH_ADR_H
     MOVLW       0X40
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕二顏色3設定==================
;===============================================
BUTTON_2_COLOR_3_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X09
     MOVWF       FLASH_ADR_H
     MOVLW       0X60
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕二顏色4設定==================
;===============================================
BUTTON_2_COLOR_4_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X09
     MOVWF       FLASH_ADR_H
     MOVLW       0X80
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕一顏色1設定==================
;===============================================
BUTTON_1_COLOR_1_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X08
     MOVWF       FLASH_ADR_H
     MOVLW       0X20
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕一顏色2設定==================
;===============================================
BUTTON_1_COLOR_2_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X08
     MOVWF       FLASH_ADR_H
     MOVLW       0X40
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕一顏色3設定==================
;===============================================
BUTTON_1_COLOR_3_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X08
     MOVWF       FLASH_ADR_H
     MOVLW       0X60
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN
;===============================================
;==============按鈕一顏色4設定==================
;===============================================
BUTTON_1_COLOR_4_SET_LOOP
BANKSEL          PORTA
     MOVLW       0X08
     MOVWF       FLASH_ADR_H
     MOVLW       0X80
     MOVWF       FLASH_ADR_L
     MOVLW       0X03
     MOVWF       FLASH_COUNT
     MOVLW       0X02
     MOVWF       FSR1H
     RETURN

;===============================================
;==============把FLASH資料讀出來(顏色)==========
;===============================================
;只取有效資料 HI完全不取
PREPARE_READ_FLASH_LOOP_1800
PAGESEL          0X2000
     CALL        READ_FLASH_LOOP_2000
PAGESEL          0X1800
     MOVF        FLASH_DAT_L,W
     MOVWF       INDF1
     INCF        FSR1L,F
     INCF        FLASH_ADR_L,F
     DECFSZ      FLASH_COUNT,F
     GOTO        PREPARE_READ_FLASH_LOOP_1800
     RETURN


;;===============================================
;;==============BNT1映射到最後輸出位置===========
;;===============================================
;BUTTON_1_LED_MAP_LOOP_1800
;     CLRF        LED_STATUS_1
;     BTFSC       BUTTON_LATCH_2,0X00
;     BSF         LED_STATUS_1,0X00
;;--------
;     BTFSC       BUTTON_LATCH_1,0X01
;     BSF         LED_STATUS_1,0X01
;;--------
;     BTFSC       BUTTON_LATCH_1,0X02
;     BSF         LED_STATUS_1,0X03
;;--------
;     BTFSC       BUTTON_LATCH_1,0X03
;     BSF         LED_STATUS_1,0X04
;;--------
;     BTFSC       BUTTON_LATCH_1,0X04
;     BSF         LED_STATUS_1,0X02
;;--------
;     BTFSC       BUTTON_LATCH_1,0X05
;     BSF         LED_STATUS_1,0X05
;;--------
;     BTFSC       BUTTON_LATCH_1,0X06
;     BSF         LED_STATUS_1,0X06
;;--------
;     BTFSC       BUTTON_LATCH_1,0X07
;     BSF         LED_STATUS_1,0X07
;;--------
;     RETURN
;===============================================
;==============BNT2映射到最後輸出位置===========
;===============================================
BUTTON_2_LED_MAP_LOOP_1800
     CLRF        LED_STATUS_2
     BTFSC       BUTTON_LATCH_2,0X00
     BSF         LED_STATUS_2,0X00
;--------
     BTFSC       BUTTON_LATCH_2,0X01
     BSF         LED_STATUS_2,0X01
;--------
     BTFSC       BUTTON_LATCH_2,0X02
     BSF         LED_STATUS_2,0X03
;--------
     BTFSC       BUTTON_LATCH_2,0X03
     BSF         LED_STATUS_2,0X04
;--------
     BTFSC       BUTTON_LATCH_2,0X04
     BSF         LED_STATUS_2,0X02
;--------
     BTFSC       BUTTON_LATCH_2,0X05
     BSF         LED_STATUS_2,0X05
;--------
     BTFSC       BUTTON_LATCH_2,0X06
     BSF         LED_STATUS_2,0X06
;--------
     BTFSC       BUTTON_LATCH_2,0X07
     BSF         LED_STATUS_2,0X07
;--------
     RETURN








;===============================================
;==============按鈕二動作程序===================
;===============================================
;按下按鈕0 LED全關閉剩下按鈕五亮
;按下按鈕5 SLIDE亮顏色1，其他全亮，觸控變成懸空狀態
;按下按柳6 SLIDE 燈關閉 同時按鈕7也關閉
;按下按柳7 SLIDE 燈關閉 同時按鈕6也關閉
;BUTTON_STATUS_2   BUTTON_LATCH_2
BUTTON_2_WORK_LOOP_1800
BANKSEL          BANK0
     BTFSC       BUTTON_STATUS_2,0X00
     CALL        BTN_2_0_WORK_LOOP_1800
     BTFSC       BUTTON_STATUS_2,0X05
     CALL        BTN_2_5_WORK_LOOP_1800
     BTFSC       BUTTON_STATUS_2,0X06
     CALL        BTN_2_6_WORK_LOOP_1800
     BTFSC       BUTTON_STATUS_2,0X07
     CALL        BTN_2_7_WORK_LOOP_1800
     RETURN
;---------------------------------
BTN_2_0_WORK_LOOP_1800
BTFSS SP_FLAG,MUTEX_STOP_START_F
RETURN
BCF SP_FLAG,MUTEX_STOP_START_F
CLRF PWM_POINT_DATA
     CLRF        BUTTON_KEEP_2
     CLRF        BUTTON_LATCH_2
     CLRF        SLIDE_PWM_DATA
     CLRF        SLIDE_SUCCESS_COUNT
     BSF         SP_FLAG,DISABLE_ALL_LED_F
CALL        LED_13_COLOR_1_LOOP
BANKSEL          BANK1
     CLRF        SLIDE_BT1_1_DATA
     CLRF        SLIDE_BT1_2_DATA
     CLRF        SLIDE_BT1_3_DATA
     CLRF        SLIDE_BT1_4_DATA
     CLRF        SLIDE_BT1_5_DATA
     CLRF        SLIDE_BT1_6_DATA
     CLRF        SLIDE_BT1_7_DATA
     CLRF        SLIDE_BT1_8_DATA
     CALL        BUTTON_1_LED_LOOP_1800
;----------
BANKSEL          BANK0
     BTFSC       FLAG1_BANK0,OUTPUT_LED_ENABLE_F
     CALL        CLOSE_LED_OUTPUT_LOOP
     BTFSC       FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
     CALL        CLOSE_FAN_OUTPUT_LOOP
BSF SP_FLAG,ENABLE_FLOAT_F	
GOTO PROGRAM_SET_BTN2_LOOP

     RETURN
CLOSE_LED_OUTPUT_LOOP
     MOVLW       0X00
     MOVWF       SLIDE_PWM_DATA
     BSF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
     BSF         FLAG1_BANK0,OUTPUT_LED_ENABLE_F
     RETURN
CLOSE_FAN_OUTPUT_LOOP
     MOVLW       0X00
     MOVWF       SLIDE_PWM_DATA
     BSF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
     BSF         FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
     RETURN



PROGRAM_SET_BTN2_LOOP
BANKSEL         PORTA

    BSF         SP_FLAG,SET_ADR_80_A0_F
    MOVLW       0X10
    MOVWF       EEPROM_ADR_TEMP
    CLRF        HW_I2C_TABLE_POINT_DAT
    BCF         HW_I2C_FLAG,HW_I2C_BUSY_F
    GOTO        PROGRAM_IN_SET_SB3585_LOOP
PROGRAM_SET_BTN1_LOOP
BANKSEL         PORTA
    BCF         SP_FLAG,SET_ADR_80_A0_F
    MOVLW       0X00
    MOVWF       EEPROM_ADR_TEMP
    CLRF        HW_I2C_TABLE_POINT_DAT
    BCF         HW_I2C_FLAG,HW_I2C_BUSY_F

PROGRAM_IN_SET_SB3585_LOOP
BANKSEL         PORTA
    MOVLW       0X24
    XORWF       HW_I2C_TABLE_POINT_DAT,W
    BTFSC       STATUS,Z
    RETURN
PAGESEL         0X2000
    CALL        INT_I2C_PREPARE_LOOP_2000
PAGESEL         0X1800
    GOTO        PROGRAM_IN_SET_SB3585_LOOP




BTN_2_5_WORK_LOOP_1800
     BTFSC       SP_FLAG,MUTEX_STOP_START_F
     RETURN
     BSF         SP_FLAG,MUTEX_STOP_START_F
BANKSEL          BANK1
     MOVLW       0X01
     MOVWF       SLIDE_BT1_1_DATA
     MOVWF       SLIDE_BT1_2_DATA
     MOVWF       SLIDE_BT1_3_DATA
     MOVWF       SLIDE_BT1_4_DATA
     MOVWF       SLIDE_BT1_5_DATA
     MOVWF       SLIDE_BT1_6_DATA
     MOVWF       SLIDE_BT1_7_DATA
     MOVWF       SLIDE_BT1_8_DATA
     CALL        BUTTON_1_LED_LOOP_1800
BANKSEL          BANK0
     CLRF        FLAG1_BANK0
CLRF PWM_POINT_DATA
     BCF         BUTTON_LATCH_2,0X00
     BCF         BUTTON_LATCH_2,0X01
     BCF         BUTTON_LATCH_2,0X02
     BCF         BUTTON_LATCH_2,0X03
     BCF         BUTTON_LATCH_2,0X04
     BCF         BUTTON_LATCH_2,0X06
     BCF         BUTTON_LATCH_2,0X07
     BCF         SP_FLAG,DISABLE_ALL_LED_F
BCF         SP_FLAG,ENABLE_FLOAT_F
GOTO PROGRAM_SET_BTN2_LOOP


     RETURN





BTN_2_6_WORK_LOOP_1800
BTFSS SP_FLAG,MUTEX_STOP_START_F
RETURN
     BTFSC       FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
     RETURN
     CLRF        FLAG1_BANK0
     MOVLW       0X00
     MOVWF       SLIDE_PWM_DATA
CLRF PWM_POINT_DATA
     BSF         FLAG1_BANK0,ENABLE_ONCE_F
     BSF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
     BSF         FLAG1_BANK0,OUTPUT_LED_ENABLE_F
     BCF         BUTTON_LATCH_2,0X07
BANKSEL BANK1
     CLRF        SLIDE_BT1_1_DATA
     CLRF        SLIDE_BT1_2_DATA
     CLRF        SLIDE_BT1_3_DATA
     CLRF        SLIDE_BT1_4_DATA
     CLRF        SLIDE_BT1_5_DATA
     CLRF        SLIDE_BT1_6_DATA
     CLRF        SLIDE_BT1_7_DATA
     CLRF        SLIDE_BT1_8_DATA
     CALL        BUTTON_1_LED_LOOP_1800
     CALL        LED_15_COLOR_0_LOOP
;----------
BANKSEL          PORTA
     RETURN




BTN_2_7_WORK_LOOP_1800
BTFSS SP_FLAG,MUTEX_STOP_START_F
RETURN
     BTFSC       FLAG1_BANK0,OUTPUT_LED_ENABLE_F
     RETURN
     CLRF        FLAG1_BANK0
     MOVLW       0X00
     MOVWF       SLIDE_PWM_DATA
CLRF PWM_POINT_DATA
     BSF         FLAG1_BANK0,ENABLE_ONCE_F
     BSF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
     BSF         FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
     BCF         BUTTON_LATCH_2,0X06
BANKSEL BANK1
     CLRF        SLIDE_BT1_1_DATA
     CLRF        SLIDE_BT1_2_DATA
     CLRF        SLIDE_BT1_3_DATA
     CLRF        SLIDE_BT1_4_DATA
     CLRF        SLIDE_BT1_5_DATA
     CLRF        SLIDE_BT1_6_DATA
     CLRF        SLIDE_BT1_7_DATA
     CLRF        SLIDE_BT1_8_DATA
     CALL        BUTTON_1_LED_LOOP_1800
     CALL        LED_14_COLOR_0_LOOP
;----------
BANKSEL          PORTA
     RETURN













;===============================================
;==============按鈕一動作程序===================
;===============================================
;使用BUTTON_STATUS_1 當作按鈕的程序基準
BUTTON_1_WORK_LOOP_1800
SLIDE_BUTTON_WORK_LOOP_1800
BANKSEL          BANK0
BTFSC SP_FLAG,DISABLE_ALL_LED_F
RETURN
;     COMF        BUTTON_STATUS_1,W
;     IORWF       SLIDE_MASK_DATA,F
;     MOVF        SLIDE_MASK_DATA,W
;     ANDWF       BUTTON_STATUS_1,F
;     MOVF        BUTTON_STATUS_1,W
;     XORWF       SLIDE_MASK_DATA,F

BTFSS BUTTON_STATUS_1,0X00
BSF SLIDE_MASK_DATA,0X00
;----------
BTFSS BUTTON_STATUS_1,0X01
BSF SLIDE_MASK_DATA,0X01
;----------
BTFSS BUTTON_STATUS_1,0X02
BSF SLIDE_MASK_DATA,0X02
;----------
BTFSS BUTTON_STATUS_1,0X03
BSF SLIDE_MASK_DATA,0X03
;----------
BTFSS BUTTON_STATUS_1,0X04
BSF SLIDE_MASK_DATA,0X04
;----------
BTFSS BUTTON_STATUS_1,0X05
BSF SLIDE_MASK_DATA,0X05
;----------
BTFSS BUTTON_STATUS_1,0X06
BSF SLIDE_MASK_DATA,0X06
;----------
BTFSS BUTTON_STATUS_1,0X07
BSF SLIDE_MASK_DATA,0X07
;----------

MOVF SLIDE_MASK_DATA,W
ANDWF BUTTON_STATUS_1,F

BTFSC BUTTON_STATUS_1,0X00
BCF SLIDE_MASK_DATA,0X00
;----------
BTFSC BUTTON_STATUS_1,0X01
BCF SLIDE_MASK_DATA,0X01
;----------
BTFSC BUTTON_STATUS_1,0X02
BCF SLIDE_MASK_DATA,0X02
;----------
BTFSC BUTTON_STATUS_1,0X03
BCF SLIDE_MASK_DATA,0X03
;----------
BTFSC BUTTON_STATUS_1,0X04
BCF SLIDE_MASK_DATA,0X04
;----------
BTFSC BUTTON_STATUS_1,0X05
BCF SLIDE_MASK_DATA,0X05
;----------
BTFSC BUTTON_STATUS_1,0X06
BCF SLIDE_MASK_DATA,0X06
;----------
BTFSC BUTTON_STATUS_1,0X07
BCF SLIDE_MASK_DATA,0X07
;----------



;----------------------------------------防止某KEY被拉住而導致不會動作
;如果沒有按下就進入TOUCH放開TIMEOUT
     MOVF        BUTTON_STATUS_1,W
     BTFSC       STATUS,Z
     GOTO        SLIDE_BUTTON_EXIT_LOOP;沒有任何按下
     CLRF        SLIDE_SUCCESS_COUNT  ;TIME_OUT計時
CALL        SLIDE_DEBOUNCE_TIME_LOOP

;CALL LED_15_COLOR_2_LOOP
BANKSEL PORTA
;----------
;如果觸控按鈕狀態和上次一樣不進行動做
     MOVF        BUTTON_STATUS_1,W
     XORWF       OLD_SLIDE_STATUS_DATA,W
     BTFSC       STATUS,Z
     RETURN
;----------
;判斷是否為第一次找新的基準點
     MOVF        OLD_SLIDE_STATUS_DATA,W
     BTFSC       STATUS,Z
     GOTO        TAKE_OLD_SLIDE_BASE_LOOP_1800  
;----------
BANKSEL         BANK1
    MOVF        DEBOUNCE_SLIDE_TEMP,W
    BTFSC       STATUS,Z
    GOTO        FIND_R_L_BIT_LOCATION
    MOVF        DEBOUNCE_SLIDE_TEMP,W
BANKSEL         PORTA
    ANDWF       BUTTON_STATUS_1,F
    MOVF        BUTTON_STATUS_1,W
    BTFSC       STATUS,Z
    RETURN
FIND_R_L_BIT_LOCATION

;根據基準值的BIT位置，判斷左右邊是多少位
     CALL        FIND_R_BIT_LOCATION_LOOP_1800
     CALL        FIND_L_BIT_LOCATION_LOOP_1800
;----------



;===============================================
;==============判斷轉動方向是左或是右===========
;===============================================
;判斷目前轉動方向是往左還是又
JUDGMENT_LAST_R_L_NONE_LOOP
BANKSEL         BANK1
     BTFSC       FLAG_BANK1,RIGHT_WAY_FLAG
     GOTO        JUDG_SLIDE_RIGHT_LOOP
     BTFSC       FLAG_BANK1,LEFT_WAY_FLAG
     GOTO        JUDG_SLIDE_LEFT_LOOP
;----------
     MOVF        SAVE_RIGHT_SLIDE,W
     XORWF       SAVE_LEFT_SLIDE,W
     BTFSC       STATUS,Z
     RETURN
;-----
     MOVF        SAVE_RIGHT_SLIDE,W
     SUBWF       SAVE_LEFT_SLIDE,W
     BTFSC       STATUS,C
     GOTO        SLIDE_LEFT_LOOP
     GOTO        SLIDE_RIGHT_LOOP
JUDG_SLIDE_RIGHT_LOOP
     MOVF        SAVE_RIGHT_SLIDE,W
     BTFSS       STATUS,Z
     GOTO        SLIDE_RIGHT_LOOP
     MOVLW       0XFE
     ADDWF       SAVE_LEFT_SLIDE,W
     BTFSC       STATUS,C
     GOTO        SLIDE_LEFT_LOOP
     RETURN
JUDG_SLIDE_LEFT_LOOP
     MOVF        SAVE_LEFT_SLIDE,W
     BTFSS       STATUS,Z
     GOTO        SLIDE_LEFT_LOOP
     MOVLW       0XFE
     ADDWF       SAVE_RIGHT_SLIDE,W
     BTFSC       STATUS,C
     GOTO        SLIDE_RIGHT_LOOP
     RETURN
;==========================================
;==============順時鐘副程式================
;==========================================
SLIDE_LEFT_LOOP
;BANKSEL PD
;BSF PD,0X04
;BCF PD,0X04

BANKSEL         BANK1
    BTFSC       FLAG_BANK1,RIGHT_WAY_FLAG
    RETURN
    BTFSC       FLAG_BANK1,RIGHT_WAY_FLAG
    BSF         FLAG_BANK1,HEAD_COLOR_FLAG 
    BCF         FLAG_BANK1,RIGHT_WAY_FLAG
    BSF         FLAG_BANK1,LEFT_WAY_FLAG


;--------------------------------
BANKSEL         BANK0
    MOVF        BUTTON_STATUS_1,W
BANKSEL         BANK1
    MOVWF       CAL_SLIDE_NUMBER1
    CLRF        CAL_SLIDE_NUMBER2
    MOVF        BASE_SLIDE_LOCATION,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    MOVF        SLIDE_CAL_COUNT,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_LEFT_DEBOUNCE_LOOP1
SLIDE_LEFT_DEBOUNCE_LOOP
BANKSEL         BANK1
    BCF         STATUS,C
    RRF         CAL_SLIDE_NUMBER1,F
    RRF         CAL_SLIDE_NUMBER2,F
    BTFSC       CAL_SLIDE_NUMBER2,0X07
    BSF         CAL_SLIDE_NUMBER1,0X07
    BTFSS       CAL_SLIDE_NUMBER2,0X07
    BCF         CAL_SLIDE_NUMBER1,0X07
BANKSEL         BANK0
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_LEFT_DEBOUNCE_LOOP
SLIDE_LEFT_DEBOUNCE_LOOP1
BANKSEL         BANK1
    BSF         CAL_SLIDE_NUMBER1,0X00
    BSF         CAL_SLIDE_NUMBER1,0X01
    MOVLW       0X02
    XORWF       SAVE_LEFT_SLIDE,W
    BTFSS       STATUS,Z
    BCF         CAL_SLIDE_NUMBER1,0X01
;-------------
    MOVLW       0X01
    XORWF       SAVE_LEFT_SLIDE,W
    BTFSC       STATUS,Z
    BCF         CAL_SLIDE_NUMBER1,0X00
MOVLW 0X07
ANDWF CAL_SLIDE_NUMBER1,F
SLIDE_LEFT_DEBOUNCE_LOOP2
    MOVF        BASE_SLIDE_LOCATION,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    MOVF        SLIDE_CAL_COUNT,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_LEFT_DEBOUNCE_LOOP4
SLIDE_LEFT_DEBOUNCE_LOOP3
BANKSEL         BANK1
    BCF         STATUS,C
    RLF         CAL_SLIDE_NUMBER1,F
    RRF         CAL_SLIDE_NUMBER2,F
    BTFSC       CAL_SLIDE_NUMBER2,0X07
    BSF         CAL_SLIDE_NUMBER1,0X00
    BTFSS       CAL_SLIDE_NUMBER2,0X07
    BCF         CAL_SLIDE_NUMBER1,0X00
BANKSEL         BANK0
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_LEFT_DEBOUNCE_LOOP3
SLIDE_LEFT_DEBOUNCE_LOOP4
SLIDE_LEFT_DEBOUNCE_END
BANKSEL         BANK1
    COMF        CAL_SLIDE_NUMBER1,W
    MOVWF       DEBOUNCE_SLIDE_TEMP
    CLRF        DEBOUNCE_SLIDE_TIME
;-----------------------------------
BANKSEL         PORTA
    BTFSC       FLAG1_BANK0,OUTPUT_LED_ENABLE_F
    GOTO        SLIDE_LEFT_OUT_LOOP
    BTFSC       FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
    GOTO        SLIDE_LEFT_OUT_LOOP
;-----------------------------------
SLIDE_LEFT_NORMAL_LOOP
    CALL        SLIDE_PULS_FUNCTION_LOOP
BANKSEL         BANK1
    MOVF        SAVE_LEFT_SLIDE,W
    ADDWF       BASE_SLIDE_LOCATION,F
    MOVLW       0XF7
    ADDWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,C
    CALL        BASE_LOCATION_1_LOOP
;----------
    MOVLW       0XF8
    ADDWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,C
    CALL        BASE_LOCATION_0_LOOP
BANKSEL         BANK0
    MOVF        BUTTON_STATUS_1,W
    MOVWF       OLD_SLIDE_STATUS_DATA
    RETURN
;----------------------------------------------
SLIDE_LEFT_OUT_LOOP
BANKSEL         BANK1
    MOVF        SAVE_LEFT_SLIDE,W
    ADDWF       BASE_SLIDE_LOCATION,F
    MOVLW       0XF7
    ADDWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,C
    CALL        BASE_LOCATION_1_LOOP
;----------
    MOVLW       0XF8
    ADDWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,C
    CALL        BASE_LOCATION_0_LOOP
BANKSEL         BANK0
    MOVF        BUTTON_STATUS_1,W
    MOVWF       OLD_SLIDE_STATUS_DATA
    CALL        SLIDE_OUT_PULS_FUNCTION_LOOP
BANKSEL BANK0
;   MOVLW       0X9C
;    ADDWF       SLIDE_PWM_DATA,W
;    BTFSC       STATUS,C
;    RETURN
;    MOVLW       0X0A
;    ADDWF       SLIDE_PWM_DATA,F
    BSF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
    RETURN
;==========================================
;==============逆時鐘副程式================
;==========================================
SLIDE_RIGHT_LOOP
BANKSEL         BANK1
    BTFSC       FLAG_BANK1,LEFT_WAY_FLAG
    RETURN
    BTFSC       FLAG_BANK1,LEFT_WAY_FLAG
    BSF         FLAG_BANK1,HEAD_COLOR_FLAG 
    BSF         FLAG_BANK1,RIGHT_WAY_FLAG
    BCF         FLAG_BANK1,LEFT_WAY_FLAG
;------------------------
;製作DEBOUNCE資料
BANKSEL         BANK0
    MOVF        BUTTON_STATUS_1,W
BANKSEL         BANK1
    MOVWF       CAL_SLIDE_NUMBER1
    CLRF        CAL_SLIDE_NUMBER2
    MOVF        BASE_SLIDE_LOCATION,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    MOVF        SLIDE_CAL_COUNT,W
    SUBLW       0X07
    MOVWF       SLIDE_CAL_COUNT
    MOVF        SLIDE_CAL_COUNT,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_RIGHT_DEBOUNCE_LOOP1
SLIDE_RIGHT_DEBOUNCE_LOOP
BANKSEL         BANK1
    BCF         STATUS,C
    RLF         CAL_SLIDE_NUMBER1,F
    RRF         CAL_SLIDE_NUMBER2,F
    BTFSC       CAL_SLIDE_NUMBER2,0X07
    BSF         CAL_SLIDE_NUMBER1,0X00
    BTFSS       CAL_SLIDE_NUMBER2,0X07
    BCF         CAL_SLIDE_NUMBER1,0X00
BANKSEL         BANK0
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_RIGHT_DEBOUNCE_LOOP
SLIDE_RIGHT_DEBOUNCE_LOOP1
BANKSEL         BANK1
    BSF         CAL_SLIDE_NUMBER1,0X07
    BSF         CAL_SLIDE_NUMBER1,0X06
    MOVLW       0X02
    XORWF       SAVE_RIGHT_SLIDE,W
    BTFSS       STATUS,Z
    BCF         CAL_SLIDE_NUMBER1,0X07
;-------------
    MOVLW       0X01
    XORWF       SAVE_RIGHT_SLIDE,W
    BTFSC       STATUS,Z
    BSF         CAL_SLIDE_NUMBER1,0X06
    MOVLW       0XE0
    ANDWF       CAL_SLIDE_NUMBER1,F
SLIDE_RIGHT_DEBOUNCE_LOOP2
    MOVF        BASE_SLIDE_LOCATION,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    MOVF        SLIDE_CAL_COUNT,W
    SUBLW       0X07
    MOVWF       SLIDE_CAL_COUNT
    MOVF        SLIDE_CAL_COUNT,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_RIGHT_DEBOUNCE_LOOP4
SLIDE_RIGHT_DEBOUNCE_LOOP3
BANKSEL         BANK1
    BCF         STATUS,C
    RRF         CAL_SLIDE_NUMBER1,F
    RRF         CAL_SLIDE_NUMBER2,F
    BTFSC       CAL_SLIDE_NUMBER2,0X07
    BSF         CAL_SLIDE_NUMBER1,0X07
    BTFSS       CAL_SLIDE_NUMBER2,0X07
    BCF         CAL_SLIDE_NUMBER1,0X07
BANKSEL         BANK0
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_RIGHT_DEBOUNCE_LOOP3
SLIDE_RIGHT_DEBOUNCE_LOOP4
SLIDE_RIGHT_DEBOUNCE_END
BANKSEL         BANK1
    COMF        CAL_SLIDE_NUMBER1,W
    MOVWF       DEBOUNCE_SLIDE_TEMP
    CLRF        DEBOUNCE_SLIDE_TIME
;------------------------

BANKSEL         PORTA
    BTFSC       FLAG1_BANK0,OUTPUT_LED_ENABLE_F
    GOTO        SLIDE_RIGHT_OUT_LOOP
    BTFSC       FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
    GOTO        SLIDE_RIGHT_OUT_LOOP
SLIDE_RIGHT_NORMAL_LOOP
    CALL        SLIDE_MINUS_FUNCTION_LOOP
;CALL SLIDE_OUT_MINUS_FUNCTION_LOOP

BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
    SUBWF       BASE_SLIDE_LOCATION,F
    MOVLW       0XFF
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    CALL        BASE_LOCATION_7_LOOP
;----------
    MOVLW       0XFE
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    CALL        BASE_LOCATION_6_LOOP
;----------
BANKSEL         BANK0
    MOVF        BUTTON_STATUS_1,W
    MOVWF       OLD_SLIDE_STATUS_DATA
    RETURN
;----------------------------------------------
SLIDE_RIGHT_OUT_LOOP
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
    SUBWF       BASE_SLIDE_LOCATION,F
    MOVLW       0XFF
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    CALL        BASE_LOCATION_7_LOOP
;----------
    MOVLW       0XFE
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    CALL        BASE_LOCATION_6_LOOP
;----------
BANKSEL         BANK0
    MOVF        BUTTON_STATUS_1,W
    MOVWF       OLD_SLIDE_STATUS_DATA
    CALL        SLIDE_OUT_MINUS_FUNCTION_LOOP
BANKSEL BANK0
;    MOVF        SLIDE_PWM_DATA,W
;    BTFSC       STATUS,Z
;    RETURN
;    MOVLW       0X0A
;    SUBWF       SLIDE_PWM_DATA,F
    BSF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
    RETURN
;-------------------------------------
BASE_LOCATION_1_LOOP
    MOVLW       0X01
    MOVWF       BASE_SLIDE_LOCATION
    RETURN
BASE_LOCATION_0_LOOP
    MOVLW       0X00
    MOVWF       BASE_SLIDE_LOCATION
    RETURN
BASE_LOCATION_7_LOOP
    MOVLW       0X07
    MOVWF       BASE_SLIDE_LOCATION
    RETURN
BASE_LOCATION_6_LOOP
    MOVLW       0X06
    MOVWF       BASE_SLIDE_LOCATION
    RETURN
;==========================================
;===========找右邊有效位置為多少===========
;==========================================
;基準的BIT位置和有取的有效位置比較，
;基準大於，要RR的次數為基準-有效位數
;基準小於，要RL的次數為有效位數-基準
;等於 不進行動做直接判定
FIND_R_BIT_LOCATION_LOOP_1800
BANKSEL          BANK0
     MOVF        BUTTON_STATUS_1,W
BANKSEL          BANK1
     MOVWF       CAL_SLIDE_NUMBER1
     CLRF        CAL_SLIDE_NUMBER2
     CLRF        SAVE_RIGHT_SLIDE
;----------
     MOVF        BASE_SLIDE_LOCATION,W
     SUBWF       TAKE_VALUE_DATA,W
     BTFSS       STATUS,C
     GOTO        FIND_R_BIT_RR_LOOP1_1800  ;W>F
     MOVF        BASE_SLIDE_LOCATION,W
     XORWF       TAKE_VALUE_DATA,W
     BTFSC       STATUS,Z
     GOTO        FIND_R_BIT_LOCATION_LOOP2_1800
;---------------------------------------------------
;基準小於，要RL的次數為有效位數-基準
FIND_R_BIT_RL_LOOP1_1800
     MOVF        BASE_SLIDE_LOCATION,W
     SUBWF       TAKE_VALUE_DATA,W
BANKSEL          BANK0
     MOVWF       SLIDE_CAL_COUNT
FIND_R_BIT_RL_LOOP2_1800
BANKSEL          BANK1
     BCF         STATUS,C
     RLF         CAL_SLIDE_NUMBER1,F
     RRF         CAL_SLIDE_NUMBER2,F
     BTFSC       CAL_SLIDE_NUMBER2,0X07
     BSF         CAL_SLIDE_NUMBER1,0X00
     BTFSS       CAL_SLIDE_NUMBER2,0X07
     BCF         CAL_SLIDE_NUMBER1,0X00 
BANKSEL          BANK0
     DECFSZ      SLIDE_CAL_COUNT,F
     GOTO        FIND_R_BIT_RL_LOOP2_1800
     GOTO        FIND_R_BIT_LOCATION_LOOP2_1800
;---------------------------------------------------
;;基準大於，要RR的次數為基準-有效位數
FIND_R_BIT_RR_LOOP1_1800
     MOVF        TAKE_VALUE_DATA,W
     SUBWF       BASE_SLIDE_LOCATION,W
BANKSEL          BANK0    
     MOVWF       SLIDE_CAL_COUNT
FIND_R_BIT_RR_LOOP2_1800
BANKSEL          BANK1
     BCF         STATUS,C
     RRF         CAL_SLIDE_NUMBER1,F
     RRF         CAL_SLIDE_NUMBER2,F
     BTFSC       CAL_SLIDE_NUMBER2,0X07
     BSF         CAL_SLIDE_NUMBER1,0X07
     BTFSS       CAL_SLIDE_NUMBER2,0X07
     BCF         CAL_SLIDE_NUMBER1,0X07  
BANKSEL          BANK0
     DECFSZ      SLIDE_CAL_COUNT,F
     GOTO        FIND_R_BIT_RR_LOOP2_1800



FIND_R_BIT_LOCATION_LOOP2_1800
BANKSEL          BANK1
     MOVF        TAKE_VALUE_DATA,W
     MOVWF       SAVE_RIGHT_SLIDE
BANKSEL          BANK0
     MOVWF       SLIDE_CAL_COUNT
FIND_R_BIT_LOCATION_LOOP3_1800
BANKSEL          BANK1
     BTFSC       CAL_SLIDE_NUMBER1,0X00
     RETURN
     DECF        SAVE_RIGHT_SLIDE,F
     BCF         STATUS,C
     RRF         CAL_SLIDE_NUMBER1,F
     RRF         CAL_SLIDE_NUMBER2,F
     BTFSC       CAL_SLIDE_NUMBER2,0X07
     BSF         CAL_SLIDE_NUMBER1,0X07
     BTFSS       CAL_SLIDE_NUMBER2,0X07
     BCF         CAL_SLIDE_NUMBER1,0X07  
BANKSEL          BANK0
     DECFSZ      SLIDE_CAL_COUNT,F
     GOTO        FIND_R_BIT_LOCATION_LOOP3_1800
     RETURN

;==========================================
;===========找左邊有效位置為多少===========
;==========================================
;基準的BIT位置和有取的有效位置比較，
;基準大於，要RR的次數為基準-有效位數
;基準小於，要RL的次數為有效位數-基準
;等於 不進行動做直接判定
FIND_L_BIT_LOCATION_LOOP_1800
BANKSEL          BANK0
     MOVF        BUTTON_STATUS_1,W
BANKSEL          BANK1
     MOVWF       CAL_SLIDE_NUMBER1
     CLRF        CAL_SLIDE_NUMBER2
     CLRF        SAVE_LEFT_SLIDE
;----------
     MOVF        BASE_SLIDE_LOCATION,W
     SUBLW       0X07
     MOVWF       BASE_CAL_TEMP
;---------  
     MOVF        BASE_CAL_TEMP,W
     SUBWF       TAKE_VALUE_DATA,W
     BTFSS       STATUS,C
     GOTO        FIND_L_BIT_RR_LOOP1_1800  ;W>F
     MOVF        BASE_CAL_TEMP,W
     XORWF       TAKE_VALUE_DATA,W
     BTFSC       STATUS,Z
     GOTO        FIND_L_BIT_LOCATION_LOOP2_1800
;---------------------------------------------------
;基準小於，要RR的次數為有效位數-基準
FIND_L_BIT_RL_LOOP1_1800
     MOVF        BASE_CAL_TEMP,W
     SUBWF       TAKE_VALUE_DATA,W
BANKSEL          BANK0
     MOVWF       SLIDE_CAL_COUNT
FIND_L_BIT_RL_LOOP2_1800
BANKSEL          BANK1
     BCF         STATUS,C
     RRF         CAL_SLIDE_NUMBER1,F
     RRF         CAL_SLIDE_NUMBER2,F
     BTFSC       CAL_SLIDE_NUMBER2,0X07
     BSF         CAL_SLIDE_NUMBER1,0X07
     BTFSS       CAL_SLIDE_NUMBER2,0X07
     BCF         CAL_SLIDE_NUMBER1,0X07 
BANKSEL          BANK0
     DECFSZ      SLIDE_CAL_COUNT,F
     GOTO        FIND_L_BIT_RL_LOOP2_1800
     GOTO        FIND_L_BIT_LOCATION_LOOP2_1800
;---------------------------------------------------
;;基準大於，要RL的次數為基準-有效位數
FIND_L_BIT_RR_LOOP1_1800
     MOVF        TAKE_VALUE_DATA,W
     SUBWF       BASE_CAL_TEMP,W
BANKSEL          BANK0    
     MOVWF       SLIDE_CAL_COUNT
FIND_L_BIT_RR_LOOP2_1800
BANKSEL          BANK1
     BCF         STATUS,C
     RLF         CAL_SLIDE_NUMBER1,F
     RRF         CAL_SLIDE_NUMBER2,F
     BTFSC       CAL_SLIDE_NUMBER2,0X07
     BSF         CAL_SLIDE_NUMBER1,0X00
     BTFSS       CAL_SLIDE_NUMBER2,0X07
     BCF         CAL_SLIDE_NUMBER1,0X00 
 BANKSEL          BANK0
     DECFSZ      SLIDE_CAL_COUNT,F
     GOTO        FIND_L_BIT_RR_LOOP2_1800
FIND_L_BIT_LOCATION_LOOP2_1800
BANKSEL          BANK1
     MOVF        TAKE_VALUE_DATA,W
     MOVWF       SAVE_LEFT_SLIDE
BANKSEL          BANK0
     MOVWF       SLIDE_CAL_COUNT
FIND_L_BIT_LOCATION_LOOP3_1800
BANKSEL          BANK1
     BTFSC       CAL_SLIDE_NUMBER1,0X07
     RETURN
     DECF        SAVE_LEFT_SLIDE,F
     BCF         STATUS,C
     RLF         CAL_SLIDE_NUMBER1,F
     RRF         CAL_SLIDE_NUMBER2,F
     BTFSC       CAL_SLIDE_NUMBER2,0X07
     BSF         CAL_SLIDE_NUMBER1,0X00
     BTFSS       CAL_SLIDE_NUMBER2,0X07
     BCF         CAL_SLIDE_NUMBER1,0X00 
BANKSEL          BANK0
     DECFSZ      SLIDE_CAL_COUNT,F
     GOTO        FIND_L_BIT_LOCATION_LOOP3_1800
     RETURN
     
;==========================================
;======甚麼都還沒按下，設定參考基準點======
;==========================================
TAKE_OLD_SLIDE_BASE_LOOP_1800 
    MOVF        BUTTON_STATUS_1,W
    MOVWF       OLD_SLIDE_STATUS_DATA
FIND_SLIDE_FIRST_MID_LOOP
BANKSEL         PORTA
    BTFSC       OLD_SLIDE_STATUS_DATA,0X00
    GOTO        FIRST_MID_POINT_1
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X01
    GOTO        FIRST_MID_POINT_2
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X02
    GOTO        FIRST_MID_POINT_3
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X03
    GOTO        FIRST_MID_POINT_4
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X04
    GOTO        FIRST_MID_POINT_5
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X05
    GOTO        FIRST_MID_POINT_6
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X06
    GOTO        FIRST_MID_POINT_7
;----------
    BTFSC       OLD_SLIDE_STATUS_DATA,0X07
    GOTO        FIRST_MID_POINT_8
;----------
    RETURN
FIRST_MID_POINT_1
    MOVLW       0X01
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_2
    MOVLW       0X02
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_3
    MOVLW       0X04
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_4
    MOVLW       0X08
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_5
    MOVLW       0X10
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_6
    MOVLW       0X20
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_7
    MOVLW       0X40
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;-------------------
FIRST_MID_POINT_8
    MOVLW       0X80
    MOVWF       OLD_SLIDE_DATA
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION
;==========================================
;======找出基準值的HIBIT是哪個位置=========
;==========================================
;;找出基準值的HIBIT在哪位
FIND_OLD_SLIDE_BIT_LOCATION
BANKSEL         PORTA
    MOVF        OLD_SLIDE_DATA,W
    MOVWF       CAL_SLIDE_TEMP
    MOVLW       0X08
    MOVWF       SLIDE_CAL_COUNT
FIND_OLD_SLIDE_BIT_LOCATION1
    BTFSC       CAL_SLIDE_TEMP,0X07
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION2
    BCF         STATUS,C
    RLF         CAL_SLIDE_TEMP,F
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        FIND_OLD_SLIDE_BIT_LOCATION1
FIND_OLD_SLIDE_BIT_LOCATION2
    DECF        SLIDE_CAL_COUNT,F
    MOVF        SLIDE_CAL_COUNT,W
BANKSEL         BANK1
    MOVWF       BASE_SLIDE_LOCATION          ;存放基準點的BIT數位至
    RETURN
;----------------------------------------------------------------
;----------------------------------------------------------------
;----------------------------------------------------------------
;都沒有按到按鈕，計時到就把原來的基準清空
SLIDE_BUTTON_EXIT_LOOP
BANKSEL         PORTA
;MOVLW 0XF4
MOVLW 0XF0
    ADDWF       SLIDE_SUCCESS_COUNT,W
    BTFSC       STATUS,C
    RETURN
    INCF        SLIDE_SUCCESS_COUNT,F
    ;MOVLW       0XB0
;MOVLW 0XF4
MOVLW 0XF0
    ADDWF       SLIDE_SUCCESS_COUNT,W
    BTFSC       STATUS,C
    GOTO        SLIDE_BUTTON_EXIT_LOOP1
    RETURN

SLIDE_BUTTON_EXIT_LOOP1
BANKSEL         PORTA
    CLRF        OLD_SLIDE_DATA
    CLRF        OLD_SLIDE_STATUS_DATA
BANKSEL         BANK1
    BCF         FLAG_BANK1,RIGHT_WAY_FLAG
    BCF         FLAG_BANK1,LEFT_WAY_FLAG
    BSF         FLAG_BANK1,HEAD_COLOR_FLAG
    CLRF        DEBOUNCE_SLIDE_TEMP
    CLRF        DEBOUNCE_SLIDE_TIME
    RETURN


;----------------------------------------------------------------
;----------------------------------------------------------------
;----------------------------------------------------------------
;DEBOUNCE TIME，用來處理如果觸控點在原來點位附近的狀態
SLIDE_DEBOUNCE_TIME_LOOP
BANKSEL         BANK1
    MOVLW       0XFD
    ADDWF       DEBOUNCE_SLIDE_TIME,W
    BTFSC       STATUS,C
    RETURN
    INCF        DEBOUNCE_SLIDE_TIME,F
    MOVLW       0XFD
    ADDWF       DEBOUNCE_SLIDE_TIME,W
    BTFSC       STATUS,C
    GOTO        SLIDE_DEBOUCNE_EXIT_LOOP1
    RETURN
SLIDE_DEBOUCNE_EXIT_LOOP1
BANKSEL BANK1
    CLRF        DEBOUNCE_SLIDE_TEMP
    ;CLRF        DEBOUNCE_SLIDE_TIME
    RETURN











;=======================================
;==SLIDE順時針將按下的顏色覆蓋其他顏色==
;=======================================
SLIDE_PULS_FUNCTION_LOOP
BANKSEL         BANK1
    MOVLW       0X00
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_1  
;------------
    MOVLW       0X01
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_2  
;------------
    MOVLW       0X02
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_3  
;------------
    MOVLW       0X03
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_4  
;------------
    MOVLW       0X04
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_5  
;------------
    MOVLW       0X05
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_6  
;------------
    MOVLW       0X06
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_PULS_FUNCTION_7  
;------------
    GOTO        SLIDE_PULS_FUNCTION_8  
;------------------------------------------------

SLIDE_PULS_FUNCTION_1
BANKSEL         BANK1
    MOVF        SLIDE_BT1_1_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_2_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_2
BANKSEL         BANK1
    MOVF        SLIDE_BT1_2_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_3_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_3
BANKSEL         BANK1
    MOVF        SLIDE_BT1_3_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_4_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_4
BANKSEL         BANK1
    MOVF        SLIDE_BT1_4_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_5_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_5
BANKSEL         BANK1
    MOVF        SLIDE_BT1_5_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_6_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_6
BANKSEL         BANK1
    MOVF        SLIDE_BT1_6_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_7_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_7
BANKSEL         BANK1
    MOVF        SLIDE_BT1_7_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
;----------------
SLIDE_PULS_FUNCTION_8
BANKSEL         BANK1
    MOVF        SLIDE_BT1_8_DATA,W
BANKSEL         BANK0
    MOVWF       CAL_SLIDE_TEMP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP
    RETURN
;----------------
SLIDE_CAL_PULS_COLOR_LOOP
BANKSEL         BANK1
    MOVF        SAVE_LEFT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
SLIDE_CAL_PULS_COLOR_LOOP1
    MOVF        CAL_SLIDE_TEMP,W
    MOVWF       INDF0
    INCF        FSR0L,F
MOVLW 0X4E
ADDWF FSR0L,W
BTFSC STATUS,C
CALL SET_LOCATION_IN_ONE
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_CAL_PULS_COLOR_LOOP1
    RETURN
SET_LOCATION_IN_ONE
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L 
    RETURN
;=======================================
;==SLIDE逆時針將按下的顏色顏色順序+1====
;=======================================
SLIDE_MINUS_FUNCTION_LOOP
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
BANKSEL         BANK1
    MOVLW       0X00
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_1
;---------- 
    MOVLW       0X01
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_2
;---------- 
    MOVLW       0X02
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_3
;---------- 
    MOVLW       0X03
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_4
;---------- 
    MOVLW       0X04
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_5
;---------- 
    MOVLW       0X05
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_6
;---------- 
    MOVLW       0X06
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_MINUS_FUNCTION_7
;---------- 
    GOTO        SLIDE_MINUS_FUNCTION_8

;---------------------------------------------------
SLIDE_MINUS_FUNCTION_1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_1_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_1_DATA
    INCF        SLIDE_BT1_1_DATA,F
    RETURN
;--------------------------------------------
SLIDE_MINUS_FUNCTION_2
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_2_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_2_DATA
    INCF        SLIDE_BT1_2_DATA,F
    RETURN






;--------------------------------------------
SLIDE_MINUS_FUNCTION_3
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_2_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_2_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_3_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_3_DATA
    INCF        SLIDE_BT1_3_DATA,F
    RETURN
;--------------------------------------------
SLIDE_MINUS_FUNCTION_4
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_3_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_3_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_4_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_4_DATA
    INCF        SLIDE_BT1_4_DATA,F
    RETURN
;--------------------------------------------
SLIDE_MINUS_FUNCTION_5
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_4_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_4_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_5_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_5_DATA
    INCF        SLIDE_BT1_5_DATA,F
    RETURN
;--------------------------------------------
SLIDE_MINUS_FUNCTION_6
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_5_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_5_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_6_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_6_DATA
    INCF        SLIDE_BT1_6_DATA,F
    RETURN
;--------------------------------------------
SLIDE_MINUS_FUNCTION_7
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_6_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_6_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_7_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_7_DATA
    INCF        SLIDE_BT1_7_DATA,F
    RETURN
;--------------------------------------------
SLIDE_MINUS_FUNCTION_8
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_7_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         BANK1
    MOVF        SAVE_RIGHT_SLIDE,W
BANKSEL         BANK0
    MOVWF       SLIDE_CAL_COUNT
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_7_DATA
    MOVWF       FSR0L
    CALL        SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL         BANK1
    BTFSS       FLAG_BANK1,HEAD_COLOR_FLAG
    RETURN
    BCF         FLAG_BANK1,HEAD_COLOR_FLAG
    MOVLW       0XFC
    ADDWF       SLIDE_BT1_8_DATA,W
    BTFSC       STATUS,C
    CLRF        SLIDE_BT1_8_DATA
    INCF        SLIDE_BT1_8_DATA,F
    RETURN
;--------------------------------------------

SLIDE_CAL_MINUS_COLOR_LOOP1
BANKSEL         PORTA
    MOVLW       0XFC
    ADDWF       INDF0,W
    BTFSC       STATUS,C
    CLRF        INDF0
    DECF        FSR0L,F
MOVLW 0X56
ADDWF FSR0L,W
BTFSS STATUS,C
CALL SET_BT8_LOCATION_LOOP
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_CAL_MINUS_COLOR_LOOP1
    RETURN

SLIDE_CAL_MINUS_COLOR_LOOP2
BANKSEL PORTA
    INCF        INDF0,F
    DECF        FSR0L,F
MOVLW 0X56
ADDWF FSR0L,W
BTFSS STATUS,C
CALL SET_BT8_LOCATION_LOOP
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_CAL_MINUS_COLOR_LOOP2
    RETURN

SET_BT8_LOCATION_LOOP
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
    RETURN


SLIDE_CHANGE_LOOP
BANKSEL BANK0
BTFSC FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
GOTO SLIDE_FAN_CHANGE_LOOP
BTFSC FLAG1_BANK0,OUTPUT_LED_ENABLE_F
GOTO SLIDE_LED_CHANGE_LOOP
RETURN






SLIDE_FAN_CHANGE_LOOP
CALL TABLE_FAN_PWM_LOOP
BANKSEL BANK0
MOVWF SLIDE_PWM_DATA
RETURN
SLIDE_LED_CHANGE_LOOP
CALL TABLE_LED_PWM_LOOP
BANKSEL BANK0
MOVWF SLIDE_PWM_DATA
RETURN
;=======================================
;=======SLIDE順時針單色覆蓋下去=========
;=======================================
SLIDE_OUT_PULS_FUNCTION_LOOP
;------------------------------------------------------------
;BANKSEL         BANK1
;    MOVF        SAVE_LEFT_SLIDE,W
;BANKSEL         BANK0
;    MOVWF       SLIDE_CAL_COUNT
BANKSEL         BANK1
    MOVLW       0X00
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_1
;---------- 
    MOVLW       0X01
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_2
;---------- 
    MOVLW       0X02
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_3
;---------- 
    MOVLW       0X03
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_4
;---------- 
    MOVLW       0X04
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_5
;---------- 
    MOVLW       0X05
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_6
;---------- 
    MOVLW       0X06
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_PULS_FUNCTION_7
;---------- 
    GOTO        SLIDE_OUT_PULS_FUNCTION_8
;------------------------------------------ 
SLIDE_OUT_PULS_FUNCTION_1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X01
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X00
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP

BANKSEL BANK1
CLRF SLIDE_BT1_2_DATA
CLRF SLIDE_BT1_3_DATA
CLRF SLIDE_BT1_4_DATA
CLRF SLIDE_BT1_5_DATA
CLRF SLIDE_BT1_6_DATA
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA



    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_2
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X02
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X01
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
BANKSEL BANK1
CLRF SLIDE_BT1_3_DATA
CLRF SLIDE_BT1_4_DATA
CLRF SLIDE_BT1_5_DATA
CLRF SLIDE_BT1_6_DATA
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_3
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X03
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X02
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
BANKSEL BANK1
CLRF SLIDE_BT1_4_DATA
CLRF SLIDE_BT1_5_DATA
CLRF SLIDE_BT1_6_DATA
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_4
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X04
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X03
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
BANKSEL BANK1
CLRF SLIDE_BT1_5_DATA
CLRF SLIDE_BT1_6_DATA
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_5
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X05
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X04
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
BANKSEL BANK1
CLRF SLIDE_BT1_6_DATA
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_6
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X06
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X05
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
BANKSEL BANK1
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_7
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
MOVLW       0X07
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X06
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
BANKSEL BANK1
CLRF SLIDE_BT1_7_DATA
CLRF SLIDE_BT1_8_DATA
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_OUT_PULS_FUNCTION_8
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_1_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X08
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X07
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP
;----------------
SLIDE_CAL_OUT_PULS_COLOR_LOOP
SLIDE_CAL_OUT_PULS_COLOR_LOOP1
BANKSEL PORTA
BTFSC FLAG1_BANK0,OUTPUT_FAN_ENABLE_F 
CALL  SET_FAN_COLOR_LOOP
BTFSC FLAG1_BANK0,OUTPUT_LED_ENABLE_F 
CALL  SET_LED_COLOR_LOOP
    MOVF        CAL_SLIDE_TEMP,W
    MOVWF       INDF0
    INCF        FSR0L,F
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    RETURN
SET_FAN_COLOR_LOOP
MOVLW 0X05
MOVWF CAL_SLIDE_TEMP
RETURN
SET_LED_COLOR_LOOP
MOVLW 0X06
MOVWF CAL_SLIDE_TEMP
RETURN
;=======================================
;==SLIDE逆時針將按下的顏色覆蓋其他顏色==
;=======================================
SLIDE_OUT_MINUS_FUNCTION_LOOP
;BANKSEL         BANK1
;    MOVF        SAVE_RIGHT_SLIDE,W
;BANKSEL         BANK0
;    MOVWF       SLIDE_CAL_COUNT
BANKSEL         BANK1
    MOVLW       0X00
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_1
;---------- 
    MOVLW       0X01
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_2
;---------- 
    MOVLW       0X02
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_3
;---------- 
    MOVLW       0X03
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_4
;---------- 
    MOVLW       0X04
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_5
;---------- 
    MOVLW       0X05
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_6
;---------- 
    MOVLW       0X06
    XORWF       BASE_SLIDE_LOCATION,W
    BTFSC       STATUS,Z
    GOTO        SLIDE_OUT_MINUS_FUNCTION_7
;---------- 
    GOTO        SLIDE_OUT_MINUS_FUNCTION_8
 
SLIDE_OUT_MINUS_FUNCTION_1
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X01
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X08
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X00
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_2
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X02
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X07
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X01
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_3
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X03
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X06
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X02
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_4
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X04
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X05
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X03
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_5
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X05
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X04
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X04
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_6
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X06
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1
    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X03
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X05
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_7
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X07
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1


    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X02
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X06
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_OUT_MINUS_FUNCTION_8
CLRF FSR0H
MOVLW SLIDE_BT1_1_DATA
MOVWF FSR0L
BANKSEL BANK0
MOVLW 0X08
MOVWF SLIDE_CAL_COUNT
CALL SLIDE_CAL_OUT_PULS_COLOR_LOOP1





    CLRF        FSR0H
    MOVLW       SLIDE_BT1_8_DATA
    MOVWF       FSR0L
BANKSEL         BANK0
    MOVLW       0X01
    MOVWF       SLIDE_CAL_COUNT
MOVLW 0X07
MOVWF PWM_POINT_DATA
CALL SLIDE_CHANGE_LOOP
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP
;----------------
SLIDE_CAL_OUT_MINUS_COLOR_LOOP

SLIDE_CAL_OUT_MINUS_COLOR_LOOP1
;BANKSEL PD
;BSF PD,0X07
;BCF PD,0X07
BANKSEL PORTA
   ; MOVF        CAL_SLIDE_TEMP,W
MOVLW 0X00
    MOVWF       INDF0
    DECF        FSR0L,F
    DECFSZ      SLIDE_CAL_COUNT,F
    GOTO        SLIDE_CAL_OUT_MINUS_COLOR_LOOP1
    RETURN




;///////////////////////////////////////////////////////////////////////////////////////
;///////////////////////////////////////////////////////////////////////////////////////
	                                        ORG  0x2000
TABLE_SB3585_ADR_2000
    MOVF        HW_I2C_TABLE_POINT_DAT,W
    BRW
    RETLW       0X00          ;0
    RETLW       0XA0          ;1
;----------
    RETLW       0X00          ;2
    RETLW       0X89          ;3
;----------
    RETLW       0X00          ;4
    RETLW       0X93          ;5
;----------
    RETLW       0X00          ;6
    RETLW       0X83          ;7
;----------
    RETLW       0X00          ;8
    RETLW       0X84          ;9
;----------
    RETLW       0X00          ;A
    RETLW       0X86          ;B
;----------
NOP 
NOP
    RETLW       0X00          ;C
    RETLW       0X9D          ;D
;----------
    RETLW       0X00          ;E
    RETLW       0X93          ;F
;----------
    RETLW       0X00          ;10
    RETLW       0X89          ;11
;----------
    RETLW       0X00          ;12
    RETLW       0X87          ;13
;----------
    RETLW       0X00          ;14
    RETLW       0XA0          ;15
;----------
    RETLW       0X01          ;16
    RETLW       0X0D          ;17
;----------
    RETLW       0X01          ;18
    RETLW       0X18          ;19
;----------
    RETLW       0X01          ;1A
    RETLW       0X0E          ;1B
;----------
    RETLW       0X01          ;1C
    RETLW       0X0F          ;1D
;----------
    RETLW       0X01          ;1E
    RETLW       0X88          ;1F
;----------
    RETLW       0X01          ;20
    RETLW       0X01          ;21
;----------
TABLE_SB3585_DAT_2000
    MOVF        HW_I2C_TABLE_POINT_DAT,W
    BRW
    RETLW       0X00
    RETLW       0X00
;---------
    RETLW       0X00
    RETLW       0X00
;---------
    RETLW       0X00
    RETLW       0X00
;---------
    RETLW       0X03
    RETLW       0X00
;---------
    RETLW       0X19
    RETLW       0X00
;---------
    RETLW       0X11
    RETLW       0X00
;---------
NOP 
NOP
    RETLW       0XFF
    RETLW       0X00
;---------
    RETLW       0X10
    RETLW       0X00
;---------
    RETLW       0X0A
    RETLW       0X00
;---------
    RETLW       0XC0
    RETLW       0X00
;---------
    RETLW       0X01
    RETLW       0X00
;---------
    RETLW       0XFE
    RETLW       0X00
;---------
    RETLW       0X2F
    RETLW       0X00
;---------
    RETLW       0X05
    RETLW       0X00
;---------
    RETLW       0X64
    RETLW       0X00
;---------
    RETLW       0X00
    RETLW       0X00
;---------
    RETLW       0X0F
    RETLW       0X00
;---------
;===============================================
;============I2C_初始化SB3585===================
;===============================================
;-------------------------------------------------------
INT_I2C_PREPARE_LOOP_2000
    BTFSC       HW_I2C_FLAG,HW_I2C_BUSY_F
    RETURN      
;-------------------------------------------------------
    BTFSC       SP_FLAG,OUTPUT_ADR_OR_DAT_F
    GOTO        INT_I2C_PREPARE_LOOP1_2000
;-------------------------------------------------------
    BSF         SP_FLAG,OUTPUT_ADR_OR_DAT_F     ;決定要送的是ADR或是DAT
    BTFSC       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0XA0
    BTFSS       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0X80
MOVLW 0X0C
XORWF HW_I2C_TABLE_POINT_DAT,W
BTFSC STATUS,Z
GOTO SET_SB3585_DELAT_LOOP_2000
    CALL        I2C_SB3585_ADR_SET_LOOP_2000
    GOTO        HW_I2C_INT_START_SET_2000
;-------------------------------------------------------
INT_I2C_PREPARE_LOOP1_2000
    BCF         SP_FLAG,OUTPUT_ADR_OR_DAT_F
    BTFSC       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0XA0
    BTFSS       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0X80
MOVLW 0X0C
XORWF HW_I2C_TABLE_POINT_DAT,W
BTFSC STATUS,Z
GOTO SET_SB3585_DELAT_LOOP1_2000
    MOVLW       0X01
    SUBWF       HW_I2C_TABLE_POINT_DAT,F
    CALL        I2C_SB3585_DAT_SET_LOOP_2000
    MOVLW       0X02
    ADDWF       HW_I2C_TABLE_POINT_DAT,F
    GOTO        HW_I2C_INT_START_SET_2000   
;===============================================
;============I2C_使用中斷送收資料===============
;===============================================
HW_I2C_INT_START_SET_2000
    MOVLW       HW_ADR
    MOVWF       HW_I2C_FSR0L_TEMP
;----------
    BSF         HW_I2C_FLAG,HW_I2C_BUSY_F
BANKSEL         SSP1CON2
    BSF         SSP1CON2,SEN
BANKSEL         BANK0
    RETURN
;-----------------------------------------------------


;===============================================
;============I2C_使用中斷發送要讀寫的ADR========
;===============================================
I2C_SB3585_ADR_SET_LOOP_2000
    MOVLW       0X00
    MOVWF       HW_READ_COUNT
    MOVLW       0X04
    MOVWF       HW_WRITE_COUNT
;------------------------
    MOVLW       0X00
    MOVWF       HW_BUF_DATA1
    CALL        TABLE_SB3585_ADR_2000
    MOVWF       HW_BUF_DATA2
    INCF        HW_I2C_TABLE_POINT_DAT,F
    CALL        TABLE_SB3585_ADR_2000
    MOVWF       HW_BUF_DATA3
    RETURN
;===============================================
;============I2C_使用中斷發送要讀寫的DAT========
;===============================================
I2C_SB3585_DAT_SET_LOOP_2000
    MOVLW       0X00
    MOVWF       HW_READ_COUNT
    MOVLW       0X03
    MOVWF       HW_WRITE_COUNT
;------------------------
    MOVLW       0X01
    MOVWF       HW_BUF_DATA1
    CALL        TABLE_SB3585_DAT_2000
    MOVWF       HW_BUF_DATA2
    RETURN	
SET_I2C_ADR_0X80
    MOVLW       0X80
    MOVWF       HW_ADR
    RETURN
SET_I2C_ADR_0XA0
    MOVLW       0XA0
    MOVWF       HW_ADR
    RETURN



;===============================================
;=================控制3585輸出PWM===============
;===============================================
OUTPUT_SB3585_LOOP_2000
    BTFSC       HW_I2C_FLAG,HW_I2C_BUSY_F
    RETURN    
;-------------------------------------------------------
    BTFSC       FLAG1_BANK0,ADR_OR_DAT_FLAG
    GOTO        OUTPUT_SB3585_LOOP1_2000
;-------------------------------------------------------
    BSF         FLAG1_BANK0,ADR_OR_DAT_FLAG
    MOVLW       0X00
    MOVWF       HW_READ_COUNT
    MOVLW       0X04
    MOVWF       HW_WRITE_COUNT
;------------------
    BTFSC       FLAG1_BANK0,OUTPUT_LED_ENABLE_F 
    CALL        SET_I2C_ADR_0XA0
    BTFSC       FLAG1_BANK0,OUTPUT_FAN_ENABLE_F 
    CALL        SET_I2C_ADR_0X80
    MOVLW       0X00
    MOVWF       HW_BUF_DATA1
    MOVLW       0X01
    MOVWF       HW_BUF_DATA2
    MOVLW       0X88
    MOVWF       HW_BUF_DATA3
    GOTO        HW_I2C_INT_START_SET_2000
;-------------------------------------------------------
OUTPUT_SB3585_LOOP1_2000
    BCF         FLAG1_BANK0,ADR_OR_DAT_FLAG
    BCF         FLAG1_BANK0,ENABLE_OUTPUT_I2C_F

;    BTFSS       FLAG1_BANK0,ENABLE_ONCE_F 
;    GOTO        OUTPUT_SB3585_LOOP2_2000
;    BCF         FLAG1_BANK0,ENABLE_ONCE_F
;BTFSC FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
;GOTO DISABLE_FAN_FLAG_LOOP
;BTFSC FLAG1_BANK0,OUTPUT_LED_ENABLE_F
;GOTO DISABLE_LED_FLAG_LOOP

OUTPUT_SB3585_LOOP2_2000
    MOVLW       0X02
    MOVWF       HW_READ_COUNT
    MOVLW       0X03
    MOVWF       HW_WRITE_COUNT
;------------------------
    BTFSC       FLAG1_BANK0,OUTPUT_LED_ENABLE_F 
    CALL        SET_I2C_ADR_0XA0
    BTFSC       FLAG1_BANK0,OUTPUT_FAN_ENABLE_F 
    CALL        SET_I2C_ADR_0X80
    MOVLW       0X01
    MOVWF       HW_BUF_DATA1
    MOVF        SLIDE_PWM_DATA,W
    MOVWF       HW_BUF_DATA2
;------------------------------------------
BTFSS       FLAG1_BANK0,ENABLE_ONCE_F 
   GOTO        HW_I2C_INT_START_SET_2000

    BCF         FLAG1_BANK0,ENABLE_ONCE_F
BTFSC FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
GOTO DISABLE_FAN_FLAG_LOOP
BTFSC FLAG1_BANK0,OUTPUT_LED_ENABLE_F
GOTO DISABLE_LED_FLAG_LOOP



DISABLE_FAN_FLAG_LOOP
    BCF         FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
    BSF         FLAG1_BANK0,OUTPUT_LED_ENABLE_F
;BSF FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
   GOTO        HW_I2C_INT_START_SET_2000
DISABLE_LED_FLAG_LOOP
    BSF         FLAG1_BANK0,OUTPUT_FAN_ENABLE_F
    BCF         FLAG1_BANK0,OUTPUT_LED_ENABLE_F  
;BSF FLAG1_BANK0,ENABLE_OUTPUT_I2C_F
   GOTO        HW_I2C_INT_START_SET_2000
;-----------------------------------------------
;-----------------------------------------------
;===============================================
;=================讀取3585觸控狀態==============
;===============================================
READ_SB3585_TOUCH_STATUS_LOOP_2000
    BTFSC       HW_I2C_FLAG,HW_I2C_BUSY_F
    RETURN
;----------
    BTFSC       BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
    RETURN        
;-------------------------------------------------------
    BTFSC       SP_FLAG,OUTPUT_ADR_OR_DAT_F
    GOTO        READ_SB3585_TOUCH_STATUS_LOOP1
;-------------------------------------------------------
    BSF         SP_FLAG,OUTPUT_ADR_OR_DAT_F
    MOVLW       0X00
    MOVWF       HW_READ_COUNT
    MOVLW       0X04
    MOVWF       HW_WRITE_COUNT
;------------------
    BTFSC       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0XA0
    BTFSS       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0X80
    MOVLW       0X00
    MOVWF       HW_BUF_DATA1
    MOVLW       0X00
    MOVWF       HW_BUF_DATA2
    MOVLW       0XA1
    MOVWF       HW_BUF_DATA3
    GOTO        HW_I2C_INT_START_SET_2000
;-------------------------------------------------------
READ_SB3585_TOUCH_STATUS_LOOP1
    BSF         BUTTON_CONTROL_1_FLAG,BTN_I2C_DISABLE_F
    BCF         SP_FLAG,OUTPUT_ADR_OR_DAT_F
    MOVLW       0X02
    MOVWF       HW_READ_COUNT
    MOVLW       0X03
    MOVWF       HW_WRITE_COUNT
;------------------------
    BTFSC       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0XA0
    BTFSS       SP_FLAG,SET_ADR_80_A0_F
    CALL        SET_I2C_ADR_0X80
    MOVLW       0X81
    MOVWF       HW_BUF_DATA1
    MOVLW       0X00
    MOVWF       HW_BUF_DATA2
    GOTO        HW_I2C_INT_START_SET_2000
;-----------------------------------------------
;-----------------------------------------------



























SET_SB3585_DELAT_LOOP_2000
    MOVLW       0X00
    MOVWF       HW_READ_COUNT
    MOVLW       0X04
    MOVWF       HW_WRITE_COUNT
;------------------------
    CLRF        HW_BUF_DATA1
    CLRF        HW_BUF_DATA2
    MOVLW       0X54
    MOVWF       HW_BUF_DATA3
    GOTO        HW_I2C_INT_START_SET_2000
;--------
SET_SB3585_DELAT_LOOP1_2000
;BANKSEL PD
;BSF PD,0X02
;BCF PD,0X02
BANKSEL PORTA
    MOVLW       0X00
    MOVWF       HW_READ_COUNT
    MOVLW       0X13
    MOVWF       HW_WRITE_COUNT
    CALL        NORMAL_HW_I2C_DELTA_LOOP_2000
BTFSC SP_FLAG,ENABLE_FLOAT_F
CALL SET_FLOAT_CHANGE_LOOP
    MOVLW       0X03
    MOVWF       HW_BUF_DATA1
    MOVLW       0X10
    MOVWF       HW_BUF_DATA2
    MOVLW       0X02
    ADDWF       HW_I2C_TABLE_POINT_DAT,F
    GOTO        HW_I2C_INT_START_SET_2000






SET_FLOAT_CHANGE_LOOP
BANKSEL         BANK0
    MOVLW       0X20
    MOVWF       EEPROM_ADR
    CALL        READ_EEPROM_2000 
    MOVF        EEPROM_DAT,W
    MOVWF       HW_BUF_DATA13     
    MOVLW       0X21
    MOVWF       EEPROM_ADR
    CALL        READ_EEPROM_2000 
    MOVF        EEPROM_DAT,W
    MOVWF       HW_BUF_DATA14  
    RETURN



;===============================================
;==============I2C1_初始化SB3585_副程式=========
;===============================================
;這段是改變SB3585的DELTA，因為DELTA的資料在EEPROM
NORMAL_HW_I2C_DELTA_LOOP_2000
BANKSEL         BANK0
    MOVLW       0X10
    MOVWF       HW_I2C_RELOAD_COUNT
    CLRF        FSR0H
    MOVLW       HW_BUF_DATA3
    MOVWF       FSR0L
NORMAL_HW_I2C_DELTA_LOOP1_2000
BANKSEL         BANK0
    MOVF        EEPROM_ADR_TEMP,W
    MOVWF       EEPROM_ADR
    CALL        READ_EEPROM_2000
    MOVF        EEPROM_DAT,W
    MOVWF       INDF0
    INCF        FSR0L,F
BANKSEL         BANK0
    INCF        EEPROM_ADR_TEMP,F
    DECFSZ      HW_I2C_RELOAD_COUNT,F
    GOTO        NORMAL_HW_I2C_DELTA_LOOP1_2000
    RETURN





;=======================================================
;=====================ERASE_FLASH=======================
;=======================================================
;ERASE FLASH
ERASE_FLASH_LOOP_2000
    BCF         INTCON,GIE
BANKSEL         EEADRL
    MOVF        FLASH_ADR_L,W
;MOVLW 0X20
    MOVWF       EEADRL
    MOVF        FLASH_ADR_H,W
;MOVLW 0X08
    MOVWF       EEADRH
    BSF         EECON1,EEPGD
    BCF         EECON1,CFGS
    BSF         EECON1,FREE
    BSF         EECON1,WREN
;-----------
    MOVLW       0X55          ;固定程序
    MOVWF       EECON2 
    MOVLW       0XAA        
    MOVWF       EECON2        ;固定程序
;;-----------------------
    BSF         EECON1,WR
    NOP
    NOP   
ERASE_FLASH_OVER
    BTFSC       EECON1,WR
    GOTO        ERASE_FLASH_OVER
    BCF         EECON1,WREN 
BANKSEL         PORTA
    BSF         INTCON,GIE
    RETURN







;ERASE_FLASH_LOOP_2000
;BANKSEL PD
;BSF PD,0X04
;BCF PD,0X04
;BANKSEL         PORTA
;    BTFSC       FLAG0_BANK0,EE_W_OK_F              ;已經完成寫入動作
;    GOTO        ERASE_FLASH_OVER
;    BTFSC       FLAG0_BANK0,EE_BUSY_F              ;表示在等待寫入完成FLAG
;    RETURN
;;----------
;    BSF         FLAG0_BANK0,ERASE_F_ENABLE_F
;BANKSEL         EEADRL
;    MOVF        FLASH_ADR_L,W
;    MOVWF       EEADRL
;    MOVF        FLASH_ADR_H,W
;    MOVWF       EEADRH
;
;    BSF         EECON1,EEPGD
;    BCF         EECON1,CFGS
;    BSF         EECON1,FREE
;    BSF         EECON1,WREN
;BANKSEL PD
;BSF PD,0X07
;BCF PD,0X07
;BANKSEL EECON1
;;-----------
;    MOVLW       0X55          ;固定程序
;    MOVWF       EECON2 
;    MOVLW       0XAA        
;    MOVWF       EECON2        ;固定程序
;;;-----------------------
;
;    BSF         EECON1,WR
;    NOP
;    NOP   
;ERASE_FLASH_OVER1
;    BTFSC       EECON1,WR
;    GOTO        ERASE_FLASH_OVER1
;    BCF         EECON1,WREN 
;
;BANKSEL         PORTA
;  ;  BSF         FLAG0_BANK0,EE_BUSY_F
;    BCF         FLAG0_BANK0,EE_W_OK_F
;    BCF         FLAG0_BANK0,EE_BUSY_F
;	BCF         FLAG0_BANK0,ERASE_F_ENABLE_F
;
;
;BANKSEL PD
;BSF PD,0X07
;BCF PD,0X07
;    RETURN
;ERASE_FLASH_OVER
;BANKSEL         EECON1
;    BCF         EECON1,WREN 
;BANKSEL         PORTA
;    BCF         FLAG0_BANK0,EE_W_OK_F
;    BCF         FLAG0_BANK0,EE_BUSY_F
;	BCF         FLAG0_BANK0,ERASE_F_ENABLE_F
;    RETURN




;ERASE_FLASH_OVER1
;    BTFSC       EECON1,WR
;    GOTO        ERASE_FLASH_OVER1
;    BCF         EECON1,WREN 
;BANKSEL PD
;BSF PD,0X07
;BCF PD,0X07
;BANKSEL         PORTA
;    BSF         INTCON,GIE
;    BCF         FLAG0_BANK0,EE_W_OK_F
;    BCF         FLAG0_BANK0,EE_BUSY_F
;	BCF         FLAG0_BANK0,ERASE_F_ENABLE_F
;    RETURN
;

;=======================================================
;=====================讀取_FLASH========================
;=======================================================
;FLASH 讀取
READ_FLASH_LOOP_2000
BANKSEL         EEADRL
	MOVF        FLASH_ADR_L,W
    MOVWF       EEADRL
	MOVF        FLASH_ADR_H,W
    MOVWF       EEADRH
;----------
    BCF         EECON1,CFGS      ;決定目前是要選擇CONFIG或是FLASH/EEPROM
    BSF         EECON1,EEPGD     ;決定目前選擇FLASH或是EEPROM
    BCF         INTCON,GIE
    BSF         EECON1,RD
    NOP
    NOP
;----------
    MOVF        EEDATL,W
    MOVWF       FLASH_DAT_L
    MOVF        EEDATH,W
    MOVWF       FLASH_DAT_H
BANKSEL         PORTA
    BSF         INTCON,GIE
    RETURN


;=======================================================
;=====================寫入_FLASH========================
;=======================================================
;WRITE FLASH
WRITE_FLASH_LOOP_2000
    BCF         INTCON,GIE
;BANKSEL         PORTA
;    BTFSC       FLAG0_BANK0,EE_W_OK_F              ;已經完成寫入動作
;    GOTO        WRITE_FLASH_OVER
;    BTFSC       FLAG0_BANK0,EE_BUSY_F              ;表示在等待寫入完成FLAG
;    RETURN 
;------------------- 
BANKSEL         EEADRH
    MOVF        FLASH_ADR_H,W
    MOVWF       EEADRH
    MOVF        FLASH_ADR_L,W
    MOVWF       EEADRL
    BSF         EECON1,EEPGD
    BCF         EECON1,CFGS
    BSF         EECON1,WREN
    BSF         EECON1,LWLO
;----------
;MOVLW 0X1F
    ;MOVLW       0X1F
    ;MOVWF       FLASH_COUNT
    ;MOVLW       0X34
    ;MOVWF       FLASH_DAT_H
TEST_WRITE_FLASH_LOOP1
BANKSEL         PORTA
;-----------
BANKSEL         EEDATH
    MOVF        INDF1,W
;MOVLW 0X34
    MOVWF       EEDATH
    INCF        FSR1L,F
;----------
    MOVF        INDF1,W
;MOVLW 0XA9
    MOVWF       EEDATL
;----------
BANKSEL         PORTA
    MOVF        FLASH_COUNT,W
    BTFSC       STATUS,Z
    GOTO        WRITE_FLASH_OVER0
    INCF        FSR1L,F
BANKSEL         EECON2
;----------
    MOVLW       0X55          ;固定程序
    MOVWF       EECON2 
    MOVLW       0XAA        
    MOVWF       EECON2        ;固定程序
    BSF         EECON1,WR
;----------
    NOP
    NOP
    INCF        EEADRL,F
;---------------------------------
WRITE_FLASH_OVER1
    BTFSC       EECON1,WR
    GOTO        WRITE_FLASH_OVER1
BANKSEL         PORTA
    DECF        FLASH_COUNT,F
    GOTO        TEST_WRITE_FLASH_LOOP1
;------------
WRITE_FLASH_OVER0
BANKSEL         EECON1
    BCF         EECON1,LWLO
    MOVLW       0X55          ;固定程序
    MOVWF       EECON2 
    MOVLW       0XAA        
    MOVWF       EECON2        ;固定程序
    BSF         EECON1,WR
;----------
    NOP
    NOP
;BANKSEL         PORTA
;    BSF         FLAG0_BANK0,WRITE_OVER_F_ENABLE_F
;    BSF         FLAG0_BANK0,EE_BUSY_F
;    RETURN
WRITE_FLASH_OVER
    BTFSC       EECON1,WR
    GOTO        WRITE_FLASH_OVER
;BANKSEL         EECON1
    BCF         EECON1,WREN 
BANKSEL         PORTA
    BSF         INTCON,GIE
;    BCF         FLAG0_BANK0,EE_W_OK_F
;    BCF         FLAG0_BANK0,EE_BUSY_F
;    BCF         FLAG0_BANK0,WRITE_OVER_F_ENABLE_F
    RETURN
;=======================================================
;===================== 讀EEPROM ========================
;=======================================================
READ_EEPROM_2000
BANKSEL         EEADRL 
    MOVF        EEPROM_ADR,W
    MOVWF       EEADRL
    BCF         EECON1,CFGS  ;USER EEPROM
    BCF         EECON1,EEPGD ;USER EEPROM
    BSF         EECON1,RD    ;READ_EEPROM
    MOVF        EEDATL,W     
    MOVWF       EEPROM_DAT
BANKSEL         BANK0
    RETURN
;=======================================================
;===================== 寫EEPROM ========================
;=======================================================
WRITE_EEPROM_2000
    BCF         INTCON,GIE
BANKSEL         PORTA
;    BSF         FLAG0_BANK0,WRITE_E_ENABLE_F
;    BTFSC       FLAG0_BANK0,EE_W_OK_F              ;EEPROM已經完成寫入動作
;    GOTO        WAIT_EEPROM_WRITE_OVER
;    BTFSC       FLAG0_BANK0,EE_BUSY_F              ;表示在等待EEPROM寫入完成FLAG
;    RETURN
BANKSEL         EEADRL 
    MOVF        EEPROM_ADR,W
    MOVWF       EEADRL                             ;EEPROM ADDRESS
    MOVF        EEPROM_DAT,W
    MOVWF       EEDATL                             ;EEPROM DATA
;;-----------------------
WRITE_EEPROM_LOOP_1
    BCF         EECON1,CFGS                        ;USER EEPROM
    BCF         EECON1,EEPGD                       ;USER EEPROM
    BSF         EECON1,WREN                        ;ENABLE WRITE
    MOVLW       0X55                               ;固定程序
    MOVWF       EECON2 
    MOVLW       0XAA        
    MOVWF       EECON2                             ;固定程序
;;-----------------------
    BSF         EECON1,WR                          ;RUN WRITE EEPROM
;BANKSEL         PORTA
;    BSF         FLAG0_BANK0,EE_BUSY_F
;    RETURN
WAIT_EEPROM_WRITE_OVER
    BTFSC       EECON1,WR
    GOTO        WAIT_EEPROM_WRITE_OVER
BANKSEL         EECON1
    BCF         EECON1,WREN                        ;Disable writes
BANKSEL         PORTA
    BSF         INTCON,GIE
;    BCF         FLAG0_BANK0,EE_W_OK_F
;    BCF         FLAG0_BANK0,EE_BUSY_F
;    BCF         FLAG0_BANK0,WRITE_E_ENABLE_F
    RETURN

;EEPROM
;***************************************************************************************************************
;***************************************************************************************************************
;***************************************************************************************************************
	                                        ORG  0xF000
;        0    1    2    3    4    5    6    7    8    9    A    B    C    D    E    F         
    DE  0xD0,0x00,0xB0,0X00,0xC0,0x00,0xA0,0x00,0x90,0x00,0x90,0x00,0xA0,0x00,0xA0,0x00     ;0
    DE  0XC0,0x01,0xA0,0X02,0x00,0x01,0xC0,0x01,0x10,0x02,0x60,0x01,0x20,0x01,0x40,0x01     ;1
    DE  0x20,0x00,0xFF,0xFF,0xFF,0xFF,0x64,0xFF,0xFF,0xFF,0x64,0x64,0xFF,0xFF,0xFF,0xFF     ;2 
    DE  0xE0,0x64,0x06,0x65,0x42,0x65,0xFF,0xFF,0xFF,0xFA,0x00,0xFA,0xFF,0xFF,0xFF,0xFF     ;3
    DE  0xFF,0xFF,0xFA,0x00,0xFA,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA,0x00,0xFA,0xFF,0xFF     ;4
    DE  0xFF,0xFF,0xFF,0xFF,0xFA,0x00,0xFA,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA,0x00,0xFA     ;5
    DE  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA,0x00,0xFA,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA     ;6 
    DE  0x00,0xFA,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFA,0x00,0xFA,0xFF,0xFF,0xFF,0xFF,0xFF     ;7

    DE  0xFA,0x00,0xFA,0x00,0xFF,0x00,0xF9,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF     ;8
    DE  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF     ;9
    DE  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF     ;A 
    DE  0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF     ;B
;---------------------------------------------------------------------------------------------------
    DE  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x32,0x30,0x32,0x31,0x30,0x33,0x32,0x36     ;C
    DE  0x56,0x31,0x30,0x30,0x56,0x31,0x30,0x30,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF     ;D
    DE  0xFF,0xFF,0xFF,0xFF,0x43,0x48,0x45,0x4E,0x2D,0x59,0x4F,0x20,0x54,0x45,0x43,0x48     ;E 
    DE  0x4E,0x4F,0x4C,0x4F,0x47,0x59,0x20,0x43,0x4F,0x2E,0x2C,0x4C,0x54,0x44,0x2E,0x20     ;F
;0X50 0X00 懸空

END
;ENDTO MAIN